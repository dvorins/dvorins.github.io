; OM File Header - Saved 2024/02/06 13:56:41
; (7.01 :patc (om-make-point 614 114) (om-make-point 50 50) (om-make-point 500 400) "" 183 0 "2022/03/28 14:12:01" "2022/07/20 15:54:37")
; End File Header
; External resources 
; (list (list (quote :sdif) "#P\"../../../audiosculpt/ChordSeqs/3.28 knx chords.sdif\""))
(in-package :om)(load-lib-for (quote ("Repmus")))(setf *om-current-persistent* (om-load-patch1 "knx piano chords 3.28" (quote ((let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 188 285) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4596 5290 4908 4916 4828 5620) (4892 4576 5602 6104 6684) (4896 6102 4768 6496 5594) (4914 4810 6096 4552 6494) (5294 6098 4572 4074 4872 4800 4786) (5320 5428 4940 4810 5200 4686 4238) (4790 5296 5086 5088) (5288 4822 7000 5072 7504) (4598 5292 4874 5798 6998 7492) (4598 4904 4856 5302 4726 7000) (4888 6104 4556 4668 5146) (6476 4862 4864 6290 6278 6798 6680 6542 6112) (6798 6868 6490 6282 6694) (6802 6878 7006 6976 6928) (8198 6990 7028 6928 6802) (8198 6990 8180 8224 6768) (6816 6760 6570 6518 6722 6484 8198) (6814 5258 4388 5018 4104) (4894 6098 6490 5602 4552) (4794 5292 6100 4578 6490) (4796 6494 5296) (4792 4786 7196 6982 6700 6476 5792) (4804 6492 4684 4514 5108 4256) (5088 5302 4772 6994 6702) (5298 4766 4044 4420) (4594 5294 4834 7000 5004) (4590 5310 5316 5090 4414 4408 4068) (4612 4882 4892) (4592 4892 5290 6104 5614) (6494 6482 4876 7684 4754 4522) (6768 6894 6964 7012 7014 8198) (7000 8200 6950 6908 6886 6778) (6790 6472 7002 6966 6724 6712 6344) (6504 4896 4816 4810) (4894 6098 6488 5596 6486) (4922 4802 4618 4612 5798 6084) (5294 4578 6098 4090 4820 4812 6494) (4792 5290 6692 5514) (4794 6496 5294 4060) (4790 7196 6506 6982 6698) (5088 5300 4772 6992 6696) (5298 4774 4102 4068 4304) (5292 6304 4826 7000) (6304 7508 6564 6478 6548 6602) (6576 6516 7744 7782) (4596 4894 4722 5606 5298) (4898 6100 6494 5604 4566) (4922 4796 4616 5796 6098) (5292 6100 4088 4592 4814) (7484 6276 7492 6322 6152 6096) (6468 7672 6528 6576 7708) (4792 5292 6490 4094) (7306 4776 8166 8010 7456) (7306 7508 6120 7476 7434 6292) (6304 7510 8212 7310 7486 6474) (6490 6486 6308 6374 6344 7508 6236) (6296 6450 5088 5004 7486 5268 4752) (5088 5296 4784 6996) (7498 7460 7406 6468 6268 6382 6130) (6488 7692 7488 6364 6360 6314) (4598 4892 5300 5612 5122) (7288 7322 6088 5890 6486 6148) (6110 6292 7520 7290 6158) (6308 7500 6474 7520 6496 6124) (4896 6098 6488 6486 5608 5064) (4610 4942 4936 4788 6106) (5292 4088 4584 4838 6096 4826 6488) (4792 5294 6492) (5088 5302 4778 6994 6700) (5290 4774 5120 4108) (5294 6102 4060) (5292 4822 6998 7480 5106 6480) (6090 6130 7240 6258 5286) (6128 6078 7310 7320 7244 7518) (7518 6318 6152 6108 8224) (6548 7520 6318 6464 6338 6462 6390) (4598 4896 4730 6100 5604 5308) (4898 6100 6492 4580) (5294 4588 4090 6098 4838 6490) (5286 5298 4774 6306 4898 4570) (4794 5292 6484 6498 6306 4140) (5092 5300 4772) (5298 6106 5800 4938 4848) (4834 5296 7500 7002 6130) (6476 7678 7504 6340 6294) (6440 6474 6506 6300 6544) (6302 7506 7540 6418 6462 6206) (4600 5296 4880 4828 7196 6998) (4894 4584 5602 6100 6686) (4896 6490 6098 5602 4558) (5292 4586 4090 6098 4808 6492) (4794 5292 6496 6692) (4796 6498 5292) (4792 4786 7198 6984 6700 6294 5794 6482) (5096 4780 5300 6994 4996) (5294 4840 7002) (7660 4750 6450 5286 7604) (6794 6516 6722 7666 6642 6620) (6992 6808 6872 6838 6916) (6254 5272 5254 5206 5096 5062 6764 4916) (4616 4886) (4592 4894 6106 5606 5290) (6502 5018 5002 4932 4788 4060) (4892 5600 6094 6498 5002) (4896 4732 6302 7492 7516) (8210 7520) (8210 7690 7654 7488 7738) (7656 7674 7694 7628 7566 7608) (8192 8220 6304 7504) (5066 5054 4440 5278 4646 4838 4830) (4620 6088 4940 4070) (5292 6096 4586 4088 4820) (5294 4772 4908 6502 4580) (6504 4784 4788 4910) (4792 5088 5300) (5294 4778 5072 4876 7498 4630) (5294 4068) (5288 4824 7000 5108 6116 5792) (6094 7300 4760 7328 4768) (7294 6094 7998 7980 8496) (7618 7652 7590 7288 7510 7450) (7620 7598 7510 6512 6454 7456 7548) (6616 6510 6544 6454 7822) (4894 4594 6100 5606 5300) (4924 4808 5800 4536 6120 4542) (4610 4930 5284 4788) (5292 4086 6096 4840 4582 4090 6490) (5286 5298 4774 4896 4570 6482) (4792 5290 6692 6498 6106 4170) (4790 5084 5302 5088 6492 6296) (5290 4822 6996 5116) (6910 6968 5772 7240 6486 7110) (6908 5760 6496 7202 6966) (6500 6906 7208 5748 7466 7454) (6504 6450 6796 6344 6760) (6452 6502 6790 6326 6380) (4596 4894 5300 4722 6098 4398) (6502 6806 6990 4864 4858 6898 6756) (6992 6516 6500 6476 7732 7688 7562 6796 4994) (4996 5190 4574 6478 6508 4780 4236) (4896 6096 6490 5602) (5292 4792 4576 4090 4086) (6088 8478 6574 6526 6480 6296) (4796 6102 6492 5294 5152) (4792 4786 5086 5304 5088 6296 7198) (5290 4804 6998 5100) (6308 7508 6474 6432 7484 6146 5268) (7578 7488 6274 7742 7560 7536) (4894 4594 6100 5604) (4802 5792 5270 4974 6108 4494) (5292 6096 4600 4088 4808) (5296 6488 4086 4828 4132 6092 7704) (6300 7498 6364 6434 6494 6442) (4792 5292 6494 6302) (5090 5298 4776 6994 6702) (4596 5292 4850 6998 5002) (4600 5296 4874 4840 7196 7000) (4894 6100 4584 5602) (5292 6096 4598 4090 4810) (6580 6514 6406 6310 7790 6220) (6578 6558 6474 6440 6658 6338 6336 5250 5190) (4792 5292 6488 5000) (4828 7202 6500 6702 6292) (5090 5302 4778 6994) (5292 4824 7000 5112) (7670 7632 7592 5282 4740) (6788 6584 6628 6850 6740 6700) (6856 6988 6986 8194 6746 6602) (6984 7016 8192 7068) (6290 6444 6286 5164 5248 5234 5160 5042 5036) (4618 4612 6498 4530 4118) (4894 4588 6100 6494 5606) (5294 4586 6098 4592 4802 4078 6490) (4794 6496 5294) (5086 5088 4762 5304 6992 7196) (6098 6498 5292 4834) (4614 6506 5292 4856 4790))) :lonset (quote (70 1080 2850 3550 4440 5310 5530 9860 10660 11150 12640 13470 13580 13680 13750 13820 13890 14030 14100 15420 18300 18960 19650 19760 21110 21180 22470 22570 22810 24700 24960 25030 25210 25310 25620 26600 26980 28230 29550 30220 31040 32400 32500 33230 33610 33750 36640 37880 38300 38950 39200 39410 41740 41810 41910 41980 42260 42330 44730 44830 45060 47330 47470 47610 47780 49310 49620 50760 53580 54930 55070 55380 55810 55940 56080 56160 56250 59240 60900 61910 62090 64860 66630 66700 67060 67260 67360 67550 68820 70530 71910 73380 74720 75420 76110 77640 78340 78510 78610 78920 78990 79270 81770 82080 82370 82530 82620 82710 82880 83190 83260 83470 84560 84690 84930 88580 88890 89240 89650 89760 89930 90000 90040 90230 94380 94510 94790 95800 95970 97330 100140 101010 101080 101150 101220 101390 101470 103650 104240 104340 104440 105660 108120 108400 109230 111390 112330 112710 112810 117050 117150 117900 118240 118510 121320 122780 124200 125250 128370 129360 129700 129790 132330 132640 134100 134900 134970 135100 135210 135380 135450 135620 139870 141350 144130 145660 146220 146390)) :ldur (quote ((1010 1010 1010 1010 1010 1010) (1770 1770 1770 1770 1770) (700 700 700 700 700) (890 890 890 890 890) (870 870 870 870 870 870 870) (220 220 220 220 220 220 220) (4330 4330 4330 4330) (800 800 800 800 800) (490 490 490 490 490 490) (1490 1490 1490 1490 1490 1490) (830 830 830 830 830) (110 110 110 110 110 110 110 110 110) (100 100 100 100 100) (70 70 70 70 70) (70 70 70 70 70) (70 70 70 70 70) (140 140 140 140 140 140 140) (70 70 70 70 70) (1320 1320 1320 1320 1320) (2880 2880 2880 2880 2880) (660 660 660) (690 690 690 690 690 690 690) (110 110 110 110 110 110) (1350 1350 1350 1350 1350) (70 70 70 70) (1290 1290 1290 1290 1290) (100 100 100 100 100 100 100) (240 240 240) (1890 1890 1890 1890 1890) (260 260 260 260 260 260) (70 70 70 70 70 70) (180 180 180 180 180 180) (100 100 100 100 100 100 100) (310 310 310 310) (980 980 980 980 980) (380 380 380 380 380 380) (1250 1250 1250 1250 1250 1250 1250) (1320 1320 1320 1320) (670 670 670 670) (820 820 820 820 820) (1360 1360 1360 1360 1360) (100 100 100 100 100) (730 730 730 730) (380 380 380 380 380 380) (140 140 140 140) (2890 2890 2890 2890 2890) (1240 1240 1240 1240 1240) (420 420 420 420 420) (650 650 650 650 650) (250 250 250 250 250 250) (210 210 210 210 210) (2330 2330 2330 2330) (70 70 70 70 70) (100 100 100 100 100 100) (70 70 70 70 70 70) (280 280 280 280 280 280 280) (70 70 70 70 70 70 70) (2400 2400 2400 2400) (100 100 100 100 100 100 100) (230 230 230 230 230 230) (2270 2270 2270 2270 2270) (140 140 140 140 140 140) (140 140 140 140 140) (170 170 170 170 170 170) (1530 1530 1530 1530 1530 1530) (310 310 310 310 310) (1140 1140 1140 1140 1140 1140 1140) (2820 2820 2820) (1350 1350 1350 1350 1350) (140 140 140 140) (310 310 310) (430 430 430 430 430 430) (130 130 130 130 130) (140 140 140 140 140 140) (80 80 80 80 80) (90 90 90 90 90 90 90) (2990 2990 2990 2990 2990 2990) (1660 1660 1660 1660) (1010 1010 1010 1010 1010 1010) (180 180 180 180 180 180) (2770 2770 2770 2770 2770 2770) (1770 1770 1770) (70 70 70 70 70) (360 360 360 360 360) (200 200 200 200 200) (100 100 100 100 100) (190 190 190 190 190 190) (1270 1270 1270 1270 1270 1270) (1710 1710 1710 1710 1710) (1380 1380 1380 1380 1380) (1470 1470 1470 1470 1470 1470) (1340 1340 1340 1340) (700 700 700) (690 690 690 690 690 690 690 690) (1530 1530 1530 1530 1530) (700 700 700) (170 170 170 170 170) (100 100 100 100 100 100) (310 310 310 310 310) (70 70 70 70 70 70 70 70) (280 280) (2500 2500 2500 2500 2500) (310 310 310 310 310 310) (290 290 290 290 290) (160 160 160 160 160) (90 90) (90 90 90 90 90) (170 170 170 170 170 170) (310 310 310 310) (70 70 70 70 70 70 70) (210 210 210 210) (1090 1090 1090 1090 1090) (130 130 130 130 130) (240 240 240 240) (3650 3650 3650) (310 310 310 310 310 310) (350 350) (410 410 410 410 410 410) (110 110 110 110 110) (170 170 170 170 170) (70 70 70 70 70 70) (40 40 40 40 40 40 40) (190 190 190 190 190) (4150 4150 4150 4150 4150) (130 130 130 130 130 130) (280 280 280 280) (1010 1010 1010 1010 1010 1010 1010) (170 170 170 170 170 170) (1360 1360 1360 1360 1360 1360) (2810 2810 2810 2810 2810 2810) (870 870 870 870) (70 70 70 70 70 70) (70 70 70 70 70) (70 70 70 70 70 70) (170 170 170 170 170) (80 80 80 80 80) (2180 2180 2180 2180 2180 2180) (590 590 590 590 590 590 590) (100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100) (1220 1220 1220 1220) (2460 2460 2460 2460 2460) (280 280 280 280 280 280) (830 830 830 830 830) (2160 2160 2160 2160 2160 2160 2160) (940 940 940 940) (380 380 380 380 380 380 380) (100 100 100 100 100 100) (4240 4240 4240 4240) (100 100 100 100 100 100) (750 750 750 750 750) (340 340 340 340 340 340 340) (270 270 270 270 270 270) (2810 2810 2810 2810) (1460 1460 1460 1460 1460) (1420 1420 1420 1420 1420) (1050 1050 1050 1050 1050 1050) (3120 3120 3120 3120) (990 990 990 990 990) (340 340 340 340 340 340) (90 90 90 90 90 90 90 90 90) (2540 2540 2540 2540) (310 310 310 310 310) (1460 1460 1460 1460) (800 800 800 800) (70 70 70 70 70) (130 130 130 130 130 130) (110 110 110 110 110 110) (170 170 170 170) (70 70 70 70 70 70 70 70 70) (170 170 170 170 170) (4250 4250 4250 4250 4250) (1480 1480 1480 1480 1480 1480 1480) (2780 2780 2780) (1530 1530 1530 1530 1530 1530) (560 560 560 560) (170 170 170 170 170))) :lvel (quote ((82 53 51 50 49 45) (66 53 50 49 47) (82 53 52 50 49) (70 56 50 48 47) (89 53 51 51 50 50 49) (71 60 57 55 50 50 49) (74 51 51 47) (58 52 48 48 47) (88 52 50 48 46 45) (76 54 53 51 49 46) (73 50 50 48 47) (61 60 59 54 53 49 48 47 46) (57 55 55 51 49) (59 56 52 52 51) (62 62 49 47 47) (64 55 47 46 46) (60 55 53 50 48 48 47) (57 53 52 51 51) (84 51 48 45 44) (73 67 48 48 47) (85 48 47) (71 70 49 47 47 47 46) (76 52 51 50 49 49) (67 53 53 47 44) (66 54 54 52) (63 57 52 49 45) (83 54 49 49 49 49 48) (69 54 53) (66 64 48 47 47) (55 55 52 48 47 45) (54 52 50 47 46 44) (59 53 47 47 47 47) (58 55 48 48 48 47 47) (59 53 52 52) (97 52 49 45 44) (59 55 54 54 51 50) (86 53 52 52 51 50 48) (100 52 44 44) (84 49 46 46) (72 50 49 47 46) (67 54 53 47 45) (68 55 54 54 51) (60 55 55 49) (58 52 52 52 51 50) (73 57 51 48) (63 61 48 47 47) (80 51 50 46 46) (58 56 55 51 49) (82 56 54 52 49) (52 51 50 49 49 47) (65 50 50 46 45) (89 49 44 44) (56 50 47 47 47) (68 50 49 48 47 47) (66 59 52 50 48 46) (61 60 56 52 51 47 45) (54 53 53 53 51 51 50) (58 56 51 47) (55 50 44 44 44 43 43) (55 50 48 48 48 48) (64 61 48 45 45) (57 51 50 46 45 45) (56 53 52 51 51) (52 50 50 48 46 46) (78 50 49 45 45 45) (58 53 53 53 51) (87 52 51 50 49 49 48) (86 48 45) (67 53 53 47 45) (75 58 53 51) (57 51 50) (62 57 51 48 48 46) (62 61 49 48 48) (64 61 55 54 49 48) (64 56 50 49 46) (58 55 55 54 53 49 48) (61 60 48 47 47 46) (77 52 49 46) (91 52 52 51 51 49) (74 64 58 54 54 53) (85 49 45 44 44 44) (62 54 53) (65 53 51 49 49) (59 58 54 50 46) (56 52 45 45 45) (58 57 53 50 48) (74 65 47 46 44 43) (75 52 49 48 45 45) (68 53 49 48 47) (83 55 51 45 45) (81 52 52 51 51 49) (98 51 46 44) (86 48 47) (70 70 50 50 47 46 46 45) (61 53 52 45 45) (59 54 49) (56 50 49 49 48) (62 50 48 46 46 46) (57 48 46 46 45) (52 50 50 49 49 49 48 48) (67 54) (64 63 48 48 47) (55 53 53 52 51 51) (96 52 51 48 45) (77 51 50 47 46) (57 50) (50 50 48 47 46) (54 51 49 49 49 47) (55 49 49 48) (53 53 53 52 52 51 50) (62 55 55 52) (89 53 52 52 50) (70 60 56 54 53) (57 57 56 51) (78 51 47) (69 59 48 48 47 46) (57 51) (62 61 51 49 47 46) (61 52 52 51 51) (58 56 50 47 46) (53 50 50 49 48 46) (52 52 49 48 48 46 45) (57 52 51 47 45) (69 57 48 47 46) (68 66 55 51 50 50) (58 53 51 51) (90 53 51 51 51 51 48) (71 63 58 54 52 50) (98 52 44 44 44 43) (64 54 48 48 46 46) (59 54 48 48) (49 47 46 45 45 44) (56 51 50 48 48) (53 52 50 50 49 49) (59 51 50 48 46) (79 59 52 51 49) (66 61 48 48 47 45) (53 49 47 47 47 44 44) (55 51 51 48 45 45 45 45 45) (60 56 53 52 51 51 49) (88 52 49 45) (69 62 49 49 48) (49 46 45 44 44 43) (77 50 46 46 45) (60 60 58 49 49 47 45) (63 54 48 48) (71 50 49 47 46 45 44) (48 48 48 47 47 47) (68 57 49 47) (56 54 54 54 53 52) (75 56 55 55 48) (68 54 49 46 46 45 44) (68 50 48 45 44 44) (87 48 45 45) (64 54 54 47 44) (63 57 51 47 45) (80 53 50 49 45 45) (75 50 50 47) (71 54 53 53 49) (60 53 47 44 43 42) (52 50 47 46 45 45 45 45 45) (88 48 45 44) (74 50 49 48 48) (65 54 53 47) (60 54 49 48) (56 53 50 50 47) (53 51 49 48 47 44) (54 48 48 47 46 46) (52 47 46 45) (54 53 51 49 48 48 48 48 48) (60 53 52 51 51) (74 59 50 48 47) (89 55 54 54 52 52 49) (93 48 47) (56 49 49 48 44 43) (51 46 42 42) (41 40 40 40 40))) :loffset (quote ((0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 4 24 (quote ggff) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 994 403) (om-make-point 400 23) 0 1 (quote :normal) (quote t) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "AS->OM" (quote as->om) (quote ((om-load-inputfun (quote input-funbox) "Analyse" "ANALYSE" nil) (om-load-inputfun (quote input-funbox) "vel min" "VMIN" 40) (om-load-inputfun (quote input-funbox) "vel max" "VMAX" 100) (om-load-inputfun (quote input-funbox) "delta" "DELTA" 5) (om-load-inputfun (quote input-funbox) "midic min" "MMIN" 4000) (om-load-inputfun (quote input-funbox) "midic max" "MMAX" 8600) (om-load-inputfun (quote input-funbox) "approx" "APPROX" 8) (om-load-inputfun (quote input-funbox) "poly. density" "NPOLY" 10))) (om-make-point 99 131) nil (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4596 5290 4908 4916 4828 5620) (4892 4576 5602 6104 6684) (4896 6102 4768 6496 5594) (4914 4810 6096 4552 6494) (5294 6098 4572 4074 4872 4800 4786) (5320 5428 4940 4810 5200 4686 4238) (4790 5296 5086 5088) (5288 4822 7000 5072 7504) (4598 5292 4874 5798 6998 7492) (4598 4904 4856 5302 4726 7000) (4888 6104 4556 4668 5146) (6476 4862 4864 6290 6278 6798 6680 6542 6112) (6798 6868 6490 6282 6694) (6802 6878 7006 6976 6928) (8198 6990 7028 6928 6802) (8198 6990 8180 8224 6768) (6816 6760 6570 6518 6722 6484 8198) (6814 5258 4388 5018 4104) (4894 6098 6490 5602 4552) (4794 5292 6100 4578 6490) (4796 6494 5296) (4792 4786 7196 6982 6700 6476 5792) (4804 6492 4684 4514 5108 4256) (5088 5302 4772 6994 6702) (5298 4766 4044 4420) (4594 5294 4834 7000 5004) (4590 5310 5316 5090 4414 4408 4068) (4612 4882 4892) (4592 4892 5290 6104 5614) (6494 6482 4876 7684 4754 4522) (6768 6894 6964 7012 7014 8198) (7000 8200 6950 6908 6886 6778) (6790 6472 7002 6966 6724 6712 6344) (6504 4896 4816 4810) (4894 6098 6488 5596 6486) (4922 4802 4618 4612 5798 6084) (5294 4578 6098 4090 4820 4812 6494) (4792 5290 6692 5514) (4794 6496 5294 4060) (4790 7196 6506 6982 6698) (5088 5300 4772 6992 6696) (5298 4774 4102 4068 4304) (5292 6304 4826 7000) (6304 7508 6564 6478 6548 6602) (6576 6516 7744 7782) (4596 4894 4722 5606 5298) (4898 6100 6494 5604 4566) (4922 4796 4616 5796 6098) (5292 6100 4088 4592 4814) (7484 6276 7492 6322 6152 6096) (6468 7672 6528 6576 7708) (4792 5292 6490 4094) (7306 4776 8166 8010 7456) (7306 7508 6120 7476 7434 6292) (6304 7510 8212 7310 7486 6474) (6490 6486 6308 6374 6344 7508 6236) (6296 6450 5088 5004 7486 5268 4752) (5088 5296 4784 6996) (7498 7460 7406 6468 6268 6382 6130) (6488 7692 7488 6364 6360 6314) (4598 4892 5300 5612 5122) (7288 7322 6088 5890 6486 6148) (6110 6292 7520 7290 6158) (6308 7500 6474 7520 6496 6124) (4896 6098 6488 6486 5608 5064) (4610 4942 4936 4788 6106) (5292 4088 4584 4838 6096 4826 6488) (4792 5294 6492) (5088 5302 4778 6994 6700) (5290 4774 5120 4108) (5294 6102 4060) (5292 4822 6998 7480 5106 6480) (6090 6130 7240 6258 5286) (6128 6078 7310 7320 7244 7518) (7518 6318 6152 6108 8224) (6548 7520 6318 6464 6338 6462 6390) (4598 4896 4730 6100 5604 5308) (4898 6100 6492 4580) (5294 4588 4090 6098 4838 6490) (5286 5298 4774 6306 4898 4570) (4794 5292 6484 6498 6306 4140) (5092 5300 4772) (5298 6106 5800 4938 4848) (4834 5296 7500 7002 6130) (6476 7678 7504 6340 6294) (6440 6474 6506 6300 6544) (6302 7506 7540 6418 6462 6206) (4600 5296 4880 4828 7196 6998) (4894 4584 5602 6100 6686) (4896 6490 6098 5602 4558) (5292 4586 4090 6098 4808 6492) (4794 5292 6496 6692) (4796 6498 5292) (4792 4786 7198 6984 6700 6294 5794 6482) (5096 4780 5300 6994 4996) (5294 4840 7002) (7660 4750 6450 5286 7604) (6794 6516 6722 7666 6642 6620) (6992 6808 6872 6838 6916) (6254 5272 5254 5206 5096 5062 6764 4916) (4616 4886) (4592 4894 6106 5606 5290) (6502 5018 5002 4932 4788 4060) (4892 5600 6094 6498 5002) (4896 4732 6302 7492 7516) (8210 7520) (8210 7690 7654 7488 7738) (7656 7674 7694 7628 7566 7608) (8192 8220 6304 7504) (5066 5054 4440 5278 4646 4838 4830) (4620 6088 4940 4070) (5292 6096 4586 4088 4820) (5294 4772 4908 6502 4580) (6504 4784 4788 4910) (4792 5088 5300) (5294 4778 5072 4876 7498 4630) (5294 4068) (5288 4824 7000 5108 6116 5792) (6094 7300 4760 7328 4768) (7294 6094 7998 7980 8496) (7618 7652 7590 7288 7510 7450) (7620 7598 7510 6512 6454 7456 7548) (6616 6510 6544 6454 7822) (4894 4594 6100 5606 5300) (4924 4808 5800 4536 6120 4542) (4610 4930 5284 4788) (5292 4086 6096 4840 4582 4090 6490) (5286 5298 4774 4896 4570 6482) (4792 5290 6692 6498 6106 4170) (4790 5084 5302 5088 6492 6296) (5290 4822 6996 5116) (6910 6968 5772 7240 6486 7110) (6908 5760 6496 7202 6966) (6500 6906 7208 5748 7466 7454) (6504 6450 6796 6344 6760) (6452 6502 6790 6326 6380) (4596 4894 5300 4722 6098 4398) (6502 6806 6990 4864 4858 6898 6756) (6992 6516 6500 6476 7732 7688 7562 6796 4994) (4996 5190 4574 6478 6508 4780 4236) (4896 6096 6490 5602) (5292 4792 4576 4090 4086) (6088 8478 6574 6526 6480 6296) (4796 6102 6492 5294 5152) (4792 4786 5086 5304 5088 6296 7198) (5290 4804 6998 5100) (6308 7508 6474 6432 7484 6146 5268) (7578 7488 6274 7742 7560 7536) (4894 4594 6100 5604) (4802 5792 5270 4974 6108 4494) (5292 6096 4600 4088 4808) (5296 6488 4086 4828 4132 6092 7704) (6300 7498 6364 6434 6494 6442) (4792 5292 6494 6302) (5090 5298 4776 6994 6702) (4596 5292 4850 6998 5002) (4600 5296 4874 4840 7196 7000) (4894 6100 4584 5602) (5292 6096 4598 4090 4810) (6580 6514 6406 6310 7790 6220) (6578 6558 6474 6440 6658 6338 6336 5250 5190) (4792 5292 6488 5000) (4828 7202 6500 6702 6292) (5090 5302 4778 6994) (5292 4824 7000 5112) (7670 7632 7592 5282 4740) (6788 6584 6628 6850 6740 6700) (6856 6988 6986 8194 6746 6602) (6984 7016 8192 7068) (6290 6444 6286 5164 5248 5234 5160 5042 5036) (4618 4612 6498 4530 4118) (4894 4588 6100 6494 5606) (5294 4586 6098 4592 4802 4078 6490) (4794 6496 5294) (5086 5088 4762 5304 6992 7196) (6098 6498 5292 4834) (4614 6506 5292 4856 4790))) :lonset (quote (70 1080 2850 3550 4440 5310 5530 9860 10660 11150 12640 13470 13580 13680 13750 13820 13890 14030 14100 15420 18300 18960 19650 19760 21110 21180 22470 22570 22810 24700 24960 25030 25210 25310 25620 26600 26980 28230 29550 30220 31040 32400 32500 33230 33610 33750 36640 37880 38300 38950 39200 39410 41740 41810 41910 41980 42260 42330 44730 44830 45060 47330 47470 47610 47780 49310 49620 50760 53580 54930 55070 55380 55810 55940 56080 56160 56250 59240 60900 61910 62090 64860 66630 66700 67060 67260 67360 67550 68820 70530 71910 73380 74720 75420 76110 77640 78340 78510 78610 78920 78990 79270 81770 82080 82370 82530 82620 82710 82880 83190 83260 83470 84560 84690 84930 88580 88890 89240 89650 89760 89930 90000 90040 90230 94380 94510 94790 95800 95970 97330 100140 101010 101080 101150 101220 101390 101470 103650 104240 104340 104440 105660 108120 108400 109230 111390 112330 112710 112810 117050 117150 117900 118240 118510 121320 122780 124200 125250 128370 129360 129700 129790 132330 132640 134100 134900 134970 135100 135210 135380 135450 135620 139870 141350 144130 145660 146220 146390)) :ldur (quote ((1010 1010 1010 1010 1010 1010) (1770 1770 1770 1770 1770) (700 700 700 700 700) (890 890 890 890 890) (870 870 870 870 870 870 870) (220 220 220 220 220 220 220) (4330 4330 4330 4330) (800 800 800 800 800) (490 490 490 490 490 490) (1490 1490 1490 1490 1490 1490) (830 830 830 830 830) (110 110 110 110 110 110 110 110 110) (100 100 100 100 100) (70 70 70 70 70) (70 70 70 70 70) (70 70 70 70 70) (140 140 140 140 140 140 140) (70 70 70 70 70) (1320 1320 1320 1320 1320) (2880 2880 2880 2880 2880) (660 660 660) (690 690 690 690 690 690 690) (110 110 110 110 110 110) (1350 1350 1350 1350 1350) (70 70 70 70) (1290 1290 1290 1290 1290) (100 100 100 100 100 100 100) (240 240 240) (1890 1890 1890 1890 1890) (260 260 260 260 260 260) (70 70 70 70 70 70) (180 180 180 180 180 180) (100 100 100 100 100 100 100) (310 310 310 310) (980 980 980 980 980) (380 380 380 380 380 380) (1250 1250 1250 1250 1250 1250 1250) (1320 1320 1320 1320) (670 670 670 670) (820 820 820 820 820) (1360 1360 1360 1360 1360) (100 100 100 100 100) (730 730 730 730) (380 380 380 380 380 380) (140 140 140 140) (2890 2890 2890 2890 2890) (1240 1240 1240 1240 1240) (420 420 420 420 420) (650 650 650 650 650) (250 250 250 250 250 250) (210 210 210 210 210) (2330 2330 2330 2330) (70 70 70 70 70) (100 100 100 100 100 100) (70 70 70 70 70 70) (280 280 280 280 280 280 280) (70 70 70 70 70 70 70) (2400 2400 2400 2400) (100 100 100 100 100 100 100) (230 230 230 230 230 230) (2270 2270 2270 2270 2270) (140 140 140 140 140 140) (140 140 140 140 140) (170 170 170 170 170 170) (1530 1530 1530 1530 1530 1530) (310 310 310 310 310) (1140 1140 1140 1140 1140 1140 1140) (2820 2820 2820) (1350 1350 1350 1350 1350) (140 140 140 140) (310 310 310) (430 430 430 430 430 430) (130 130 130 130 130) (140 140 140 140 140 140) (80 80 80 80 80) (90 90 90 90 90 90 90) (2990 2990 2990 2990 2990 2990) (1660 1660 1660 1660) (1010 1010 1010 1010 1010 1010) (180 180 180 180 180 180) (2770 2770 2770 2770 2770 2770) (1770 1770 1770) (70 70 70 70 70) (360 360 360 360 360) (200 200 200 200 200) (100 100 100 100 100) (190 190 190 190 190 190) (1270 1270 1270 1270 1270 1270) (1710 1710 1710 1710 1710) (1380 1380 1380 1380 1380) (1470 1470 1470 1470 1470 1470) (1340 1340 1340 1340) (700 700 700) (690 690 690 690 690 690 690 690) (1530 1530 1530 1530 1530) (700 700 700) (170 170 170 170 170) (100 100 100 100 100 100) (310 310 310 310 310) (70 70 70 70 70 70 70 70) (280 280) (2500 2500 2500 2500 2500) (310 310 310 310 310 310) (290 290 290 290 290) (160 160 160 160 160) (90 90) (90 90 90 90 90) (170 170 170 170 170 170) (310 310 310 310) (70 70 70 70 70 70 70) (210 210 210 210) (1090 1090 1090 1090 1090) (130 130 130 130 130) (240 240 240 240) (3650 3650 3650) (310 310 310 310 310 310) (350 350) (410 410 410 410 410 410) (110 110 110 110 110) (170 170 170 170 170) (70 70 70 70 70 70) (40 40 40 40 40 40 40) (190 190 190 190 190) (4150 4150 4150 4150 4150) (130 130 130 130 130 130) (280 280 280 280) (1010 1010 1010 1010 1010 1010 1010) (170 170 170 170 170 170) (1360 1360 1360 1360 1360 1360) (2810 2810 2810 2810 2810 2810) (870 870 870 870) (70 70 70 70 70 70) (70 70 70 70 70) (70 70 70 70 70 70) (170 170 170 170 170) (80 80 80 80 80) (2180 2180 2180 2180 2180 2180) (590 590 590 590 590 590 590) (100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100) (1220 1220 1220 1220) (2460 2460 2460 2460 2460) (280 280 280 280 280 280) (830 830 830 830 830) (2160 2160 2160 2160 2160 2160 2160) (940 940 940 940) (380 380 380 380 380 380 380) (100 100 100 100 100 100) (4240 4240 4240 4240) (100 100 100 100 100 100) (750 750 750 750 750) (340 340 340 340 340 340 340) (270 270 270 270 270 270) (2810 2810 2810 2810) (1460 1460 1460 1460 1460) (1420 1420 1420 1420 1420) (1050 1050 1050 1050 1050 1050) (3120 3120 3120 3120) (990 990 990 990 990) (340 340 340 340 340 340) (90 90 90 90 90 90 90 90 90) (2540 2540 2540 2540) (310 310 310 310 310) (1460 1460 1460 1460) (800 800 800 800) (70 70 70 70 70) (130 130 130 130 130 130) (110 110 110 110 110 110) (170 170 170 170) (70 70 70 70 70 70 70 70 70) (170 170 170 170 170) (4250 4250 4250 4250 4250) (1480 1480 1480 1480 1480 1480 1480) (2780 2780 2780) (1530 1530 1530 1530 1530 1530) (560 560 560 560) (170 170 170 170 170))) :lvel (quote ((82 53 51 50 49 45) (66 53 50 49 47) (82 53 52 50 49) (70 56 50 48 47) (89 53 51 51 50 50 49) (71 60 57 55 50 50 49) (74 51 51 47) (58 52 48 48 47) (88 52 50 48 46 45) (76 54 53 51 49 46) (73 50 50 48 47) (61 60 59 54 53 49 48 47 46) (57 55 55 51 49) (59 56 52 52 51) (62 62 49 47 47) (64 55 47 46 46) (60 55 53 50 48 48 47) (57 53 52 51 51) (84 51 48 45 44) (73 67 48 48 47) (85 48 47) (71 70 49 47 47 47 46) (76 52 51 50 49 49) (67 53 53 47 44) (66 54 54 52) (63 57 52 49 45) (83 54 49 49 49 49 48) (69 54 53) (66 64 48 47 47) (55 55 52 48 47 45) (54 52 50 47 46 44) (59 53 47 47 47 47) (58 55 48 48 48 47 47) (59 53 52 52) (97 52 49 45 44) (59 55 54 54 51 50) (86 53 52 52 51 50 48) (100 52 44 44) (84 49 46 46) (72 50 49 47 46) (67 54 53 47 45) (68 55 54 54 51) (60 55 55 49) (58 52 52 52 51 50) (73 57 51 48) (63 61 48 47 47) (80 51 50 46 46) (58 56 55 51 49) (82 56 54 52 49) (52 51 50 49 49 47) (65 50 50 46 45) (89 49 44 44) (56 50 47 47 47) (68 50 49 48 47 47) (66 59 52 50 48 46) (61 60 56 52 51 47 45) (54 53 53 53 51 51 50) (58 56 51 47) (55 50 44 44 44 43 43) (55 50 48 48 48 48) (64 61 48 45 45) (57 51 50 46 45 45) (56 53 52 51 51) (52 50 50 48 46 46) (78 50 49 45 45 45) (58 53 53 53 51) (87 52 51 50 49 49 48) (86 48 45) (67 53 53 47 45) (75 58 53 51) (57 51 50) (62 57 51 48 48 46) (62 61 49 48 48) (64 61 55 54 49 48) (64 56 50 49 46) (58 55 55 54 53 49 48) (61 60 48 47 47 46) (77 52 49 46) (91 52 52 51 51 49) (74 64 58 54 54 53) (85 49 45 44 44 44) (62 54 53) (65 53 51 49 49) (59 58 54 50 46) (56 52 45 45 45) (58 57 53 50 48) (74 65 47 46 44 43) (75 52 49 48 45 45) (68 53 49 48 47) (83 55 51 45 45) (81 52 52 51 51 49) (98 51 46 44) (86 48 47) (70 70 50 50 47 46 46 45) (61 53 52 45 45) (59 54 49) (56 50 49 49 48) (62 50 48 46 46 46) (57 48 46 46 45) (52 50 50 49 49 49 48 48) (67 54) (64 63 48 48 47) (55 53 53 52 51 51) (96 52 51 48 45) (77 51 50 47 46) (57 50) (50 50 48 47 46) (54 51 49 49 49 47) (55 49 49 48) (53 53 53 52 52 51 50) (62 55 55 52) (89 53 52 52 50) (70 60 56 54 53) (57 57 56 51) (78 51 47) (69 59 48 48 47 46) (57 51) (62 61 51 49 47 46) (61 52 52 51 51) (58 56 50 47 46) (53 50 50 49 48 46) (52 52 49 48 48 46 45) (57 52 51 47 45) (69 57 48 47 46) (68 66 55 51 50 50) (58 53 51 51) (90 53 51 51 51 51 48) (71 63 58 54 52 50) (98 52 44 44 44 43) (64 54 48 48 46 46) (59 54 48 48) (49 47 46 45 45 44) (56 51 50 48 48) (53 52 50 50 49 49) (59 51 50 48 46) (79 59 52 51 49) (66 61 48 48 47 45) (53 49 47 47 47 44 44) (55 51 51 48 45 45 45 45 45) (60 56 53 52 51 51 49) (88 52 49 45) (69 62 49 49 48) (49 46 45 44 44 43) (77 50 46 46 45) (60 60 58 49 49 47 45) (63 54 48 48) (71 50 49 47 46 45 44) (48 48 48 47 47 47) (68 57 49 47) (56 54 54 54 53 52) (75 56 55 55 48) (68 54 49 46 46 45 44) (68 50 48 45 44 44) (87 48 45 45) (64 54 54 47 44) (63 57 51 47 45) (80 53 50 49 45 45) (75 50 50 47) (71 54 53 53 49) (60 53 47 44 43 42) (52 50 47 46 45 45 45 45 45) (88 48 45 44) (74 50 49 48 48) (65 54 53 47) (60 54 49 48) (56 53 50 50 47) (53 51 49 48 47 44) (54 48 48 47 46 46) (52 47 46 45) (54 53 51 49 48 48 48 48 48) (60 53 52 51 51) (74 59 50 48 47) (89 55 54 54 52 52 49) (93 48 47) (56 49 49 48 44 43) (51 46 42 42) (41 40 40 40 40))) :loffset (quote ((0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) "x" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3.28 knx chords.sdif" (quote sdiffile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 91 51) (om-make-point 70 50) (let ((newobj (load-sdif-file (om-make-pathname :directory (quote (:absolute "Users" "samdvorin" "Desktop" "music" "audiosculpt" "ChordSeqs")) :device nil :host nil :name "3.28 knx chords" :type "sdif")))) (when newobj) newobj) "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 400 500))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 0 0 nil 0) (2 0 1 0 nil 0))) nil 6.19))
