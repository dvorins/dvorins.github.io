; OM File Header - Saved 2022/07/21 13:27:36
; (6.19 :patc (om-make-point 133 8) (om-make-point 50 50) (om-make-point 500 400) "" 183 0 "2021/10/26 20:27:40" "2022/07/21 13:27:36")
; End File Header
; External resources 
; (list (list (quote :sdif) "#P\"../../../audiosculpt/ChordSeqs/echo-cs.sdif\""))
(in-package :om)(load-lib-for (quote ("Repmus")))(setf *om-current-persistent* (om-load-patch1 "blue" (quote ((let ((box (om-load-editor-box1 "dragged 4" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 217 264) (om-make-point 60 90) (let ((thechord (make-instance (quote chord) :lmidic (quote (6054 5932 5748 5544 7138 6748 6440 7952 7248 4534)) :ldur (quote (770 770 770 770 770 770 770 770 770 770)) :lvel (quote (45 45 45 45 44 44 43 42 42 42)) :loffset (quote (0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 0 0 (om-make-point 400 23) (om-make-point 370 280) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 4)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "dragged 3" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 156 263) (om-make-point 60 90) (let ((thechord (make-instance (quote chord) :lmidic (quote (5500 6048 6216 7264 6704 5020 6640 7220 7850 7144)) :ldur (quote (1630 1630 1630 1630 1630 1630 1630 1630 1630 1630)) :lvel (quote (49 48 46 45 45 45 43 42 41 41)) :loffset (quote (0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 0 0 (om-make-point 51 23) (om-make-point 599 330) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 4)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "dragged 2" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 29 263) (om-make-point 60 90) (let ((thechord (make-instance (quote chord) :lmidic (quote (6054 5738 5938 5534 7132 6738 6442 7258 5252 4528)) :ldur (quote (1270 1270 1270 1270 1270 1270 1270 1270 1270 1270)) :lvel (quote (54 52 51 49 48 46 46 45 43 43)) :loffset (quote (0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 0 0 (om-make-point 64 23) (om-make-point 596 353) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 4)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "dragged" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 92 262) (om-make-point 60 90) (let ((thechord (make-instance (quote chord) :lmidic (quote (5710 5980 4526 6412 5508 5252 6702 7268 7214 7404)) :ldur (quote (1930 1930 1930 1930 1930 1930 1930 1930 1930 1930)) :lvel (quote (53 47 47 46 46 46 44 41 41 40)) :loffset (quote (0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 0 0 (om-make-point 43 23) (om-make-point 408 261) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 4)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 341 189) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6034 5708 7116 5912 7230) (5726 6050 5532 5932 6738 4510 7132 6440 5218 5016) (6636 5434 6228 6060 5924 5028 7102 7264 7806 7350) (6020 5744 7216 5544 4558 6444 7156 6196 7266 7920) (5730 4520 5522 6714 6432 5932 5230 6048 7128 7402) (5044 6648 5446 6280 6178 6050 7256 5754 7448 6950) (6600 6032 5416 4520 5720 7236 4978 7304 7140 6212) (5202 5626 6606 5408 4462 7316 6324 7244 7566 6208) (5698 6402 5930 5240 4508 5500 6906 6700 6232 7396) (6064 5442 6642 5950 5024 4840 5752 4558 7340 6228) (6226 5024 6030 4716 7228 7834 5414 6942) (6596 6200 5398 5000 7300 6016 7214 4692 7790 8500) (6642 4540 5744 5446 6070 6236 7338 7268 5032 6450) (5710 5980 4526 6412 5508 5252 6702 7268 7214 7404) (6054 5738 5938 5534 7132 6738 6442 7258 5252 4528) (6024 7222 5918 7106 5696 7924 5482 5212 6408 6664) (5236 6206 5922 4980 6950 5786 4618 6810) (5028 5952 6234 6066 7268 7156 5442 6634 5236 5744) (4558 5766 5038 5462 6260 7358 6466 6652 7674 6966) (4522 6024 5016 5736 5414 5902 6216 5214 6614 7100) (6248 6062 4792 5054 5960 5440 4578) (6054 5932 5748 5544 7138 6748 6440 7952 7248 4534) (6034 7236 5720 6420 5520 5916 7936 7116 7804 6924) (6598 7796 6008 6670 7212 7840 6718 7864 6348 8500) (6636 6706 6234 5034 5432 6040 7910 7846 7238 7804) (6034 7224 6414 6614 5448 6710 6244 5038 7630 7924) (7270 6066 6750 5544 6266 5740 6446 5958 7972 7146) (5500 6048 6216 7264 6704 5020 6640 7220 7850 7144) (6706 7906 6624 7818 5520 7222 6024 5708 6414 7750) (6670 6598 6518 7794 5500 5364 6014 7210 5706 6402) (6278 6462 6054 5524 7260 6548 6718 5350 7628 7466) (6052 7254 6734 6630 6238 5534 7156 5036 5794 7342) (5928 6644 7116 5506 7220 6704 6210 5014 4746 7824) (6024 7150 6692 5546 7224 5732 6428 7922 7850 4524) (6042 6246 7254 5430 6632 5038 7138 7848 7342 6946) (6712 6612 7796 7912 6030 5536 7858 7228 6418 6822) (6622 6568 7844 5516 6060 7260 6458 5756 7740 7152) (6438 7654 6736 5542 6062 7262 6604 5418 7850 5748) (6226 6028 5514 6300 6710 7228 7444 6422 5046 7118) (6002 5952 5526 7116 6710 7242 6224 5722 7818 6420) (6046 7250 6630 6222 5424 5024 7334 7138 7956 6922) (7274 6056 5464 6758 5752 6102 5638 6662 6452 7968) (6634 6754 5480 6052 7264 7830 7960 5762 6458 7444) (6406 6562 7598 5354 7804 5552 6004 7210 6696 7718) (6242 6036 5524 7240 6720 5064 5866 6658 7356 6586) (5908 6044 7112 5522 6618 7226 6706 6246 7814 4826) (5530 6056 7264 6734 5746 7146 6440) (6052 7256 5738 6436 5538 7960 7138 5922 7816 4532) (6004 5400 6602 7210) (6218 5434 5024 6608 6026 7220 6918 7308) (5450 6652 6548 5100 6230 5208 7280 6042 5652 7330) (6054 7264 5506 6724 6644 6444 6256 5740 5050 7970) (6044 6214 5018 7262 6620 5442 7108 6914) (7262 6054 5746 5534 5386 6660 6452 6746 6950 7140) (6034 5526 7238 6722 5718 5404 6418 5216 6596 5072) (6034 6236 7214 5038 7260 6618 5426 4746 7348 7096) (6036 7232 5536 5734 6734 6440 6610 4726 4572 7924) (6040 5454 7240 6630 6246 5032 7138 5720 7340 6416) (5252 7270 6070 6756 6454 5556 5758 7856 6546 5954) (6046 5064 7248 6262 5544 6738 7134 5740 7840 6446) (6048 6222 7240 5950 5858 7166 6650 5412 5030 7340) (5916 6030 6620 6210 4720 7214 5420 7264 5016) (7230 6032 6716 5712 5510 4312) (5556) (5430))) :lonset (quote (630 1460 5380 7880 9260 12430 13020 13480 13522 13880 14540 15370 15530 16550 19210 20480 20860 20910 21790 21950 22970 26520 27290 28050 28120 28890 30500 31230 32860 33250 33630 34350 34760 35510 37320 38830 39230 39630 39940 40370 43380 44950 44990 45710 46050 46850 47900 52300 53060 53130 53920 53950 56220 57820 57890 59340 60520 62320 64650 64990 65350 65430 66890 69980 70340 70730)) :ldur (quote ((830 830 830 830 830) (3920 3920 3920 3920 3920 3920 3920 3920 3920 3920) (2500 2500 2500 2500 2500 2500 2500 2500 2500 2500) (1380 1380 1380 1380 1380 1380 1380 1380 1380 1380) (3170 3170 3170 3170 3170 3170 3170 3170 3170 3170) (590 590 590 590 590 590 590 590 590 590) (460 460 460 460 460 460 460 460 460 460) (400 400 400 400 400 400 400 400 400 400) (730 730 730 730 730 730 730 730 730 730) (660 660 660 660 660 660 660 660 660 660) (830 830 830 830 830 830 830 830) (160 160 160 160 160 160 160 160 160 160) (1020 1020 1020 1020 1020 1020 1020 1020 1020 1020) (1930 1930 1930 1930 1930 1930 1930 1930 1930 1930) (1270 1270 1270 1270 1270 1270 1270 1270 1270 1270) (380 380 380 380 380 380 380 380 380 380) (50 50 50 50 50 50 50 50) (880 880 880 880 880 880 880 880 880 880) (160 160 160 160 160 160 160 160 160 160) (1020 1020 1020 1020 1020 1020 1020 1020 1020 1020) (3260 3260 3260 3260 3260 3260 3260) (770 770 770 770 770 770 770 770 770 770) (760 760 760 760 760 760 760 760 760 760) (70 70 70 70 70 70 70 70 70 70) (770 770 770 770 770 770 770 770 770 770) (1610 1610 1610 1610 1610 1610 1610 1610 1610 1610) (730 730 730 730 730 730 730 730 730 730) (1630 1630 1630 1630 1630 1630 1630 1630 1630 1630) (390 390 390 390 390 390 390 390 390 390) (380 380 380 380 380 380 380 380 380 380) (720 720 720 720 720 720 720 720 720 720) (410 410 410 410 410 410 410 410 410 410) (750 750 750 750 750 750 750 750 750 750) (1810 1810 1810 1810 1810 1810 1810 1810 1810 1810) (1510 1510 1510 1510 1510 1510 1510 1510 1510 1510) (400 400 400 400 400 400 400 400 400 400) (400 400 400 400 400 400 400 400 400 400) (310 310 310 310 310 310 310 310 310 310) (430 430 430 430 430 430 430 430 430 430) (3010 3010 3010 3010 3010 3010 3010 3010 3010 3010) (1570 1570 1570 1570 1570 1570 1570 1570 1570 1570) (40 40 40 40 40 40 40 40 40 40) (720 720 720 720 720 720 720 720 720 720) (340 340 340 340 340 340 340 340 340 340) (800 800 800 800 800 800 800 800 800 800) (1050 1050 1050 1050 1050 1050 1050 1050 1050 1050) (4400 4400 4400 4400 4400 4400 4400) (760 760 760 760 760 760 760 760 760 760) (70 70 70 70) (790 790 790 790 790 790 790 790) (30 30 30 30 30 30 30 30 30 30) (2270 2270 2270 2270 2270 2270 2270 2270 2270 2270) (1600 1600 1600 1600 1600 1600 1600 1600) (70 70 70 70 70 70 70 70 70 70) (1450 1450 1450 1450 1450 1450 1450 1450 1450 1450) (1180 1180 1180 1180 1180 1180 1180 1180 1180 1180) (1800 1800 1800 1800 1800 1800 1800 1800 1800 1800) (2330 2330 2330 2330 2330 2330 2330 2330 2330 2330) (340 340 340 340 340 340 340 340 340 340) (360 360 360 360 360 360 360 360 360 360) (80 80 80 80 80 80 80 80 80 80) (1460 1460 1460 1460 1460 1460 1460 1460 1460) (1500 1500 1500 1500 1500 1500) (360) (390))) :lvel (quote ((42 42 41 41 40) (51 49 49 48 44 44 43 43 43 43) (52 51 50 50 49 49 44 42 41 41) (53 49 44 44 44 43 42 42 41 40) (53 49 48 46 46 45 45 43 42 41) (47 46 44 43 43 43 42 42 41 41) (47 47 47 46 43 42 41 40 40 40) (60 56 50 50 48 45 45 43 42 42) (52 47 47 46 45 43 42 42 42 41) (52 52 50 49 47 47 46 44 43 42) (54 53 45 44 42 41 41 40) (57 53 52 48 45 44 43 43 41 40) (53 52 48 47 46 45 44 43 43 42) (53 47 47 46 46 46 44 41 41 40) (54 52 51 49 48 46 46 45 43 43) (81 74 52 46 46 45 45 45 44 43) (52 50 50 49 41 41 41 40) (53 50 48 46 44 44 44 43 43 42) (54 51 49 46 45 44 43 42 41 41) (57 54 54 51 51 50 46 46 45 44) (42 42 42 41 40 40 40) (45 45 45 45 44 44 43 42 42 42) (82 71 56 52 52 48 45 45 44 43) (70 62 50 48 46 45 43 42 42 41) (54 52 51 49 47 46 45 45 43 42) (53 49 47 46 45 44 44 43 42 41) (55 55 49 49 47 47 46 46 42 42) (49 48 46 45 45 45 43 42 41 41) (84 68 67 55 52 51 51 49 46 44) (87 70 60 59 58 54 49 48 47 46) (68 65 57 55 52 52 49 49 48 46) (74 58 56 55 55 55 49 49 48 43) (79 57 56 56 52 51 48 46 45 43) (57 49 49 49 47 45 42 41 41 41) (53 49 47 47 46 44 42 41 41 41) (100 69 56 53 53 53 49 47 45 42) (78 62 59 56 50 45 45 45 43 42) (99 61 59 59 56 54 54 54 46 46) (65 58 57 55 53 52 51 47 45 43) (55 55 54 49 49 45 43 43 42 42) (53 48 46 46 45 43 41 41 40 40) (53 53 52 51 49 48 46 45 45 43) (72 62 60 54 52 50 45 44 43 41) (83 65 58 58 53 51 50 46 46 45) (62 57 54 50 47 46 45 43 42 42) (80 59 55 51 49 48 46 45 44 44) (49 47 44 43 42 41 40) (53 49 44 43 43 41 41 41 40 40) (44 44 43 42) (47 46 46 44 43 42 41 40) (57 51 51 50 48 48 45 45 45 43) (51 48 44 43 42 42 42 42 42 41) (47 46 45 43 43 42 41 40) (49 46 46 46 46 45 44 43 42 41) (51 51 47 46 46 44 43 43 42 42) (51 47 46 46 45 45 45 44 41 41) (51 46 45 44 43 42 41 41 41 40) (49 47 45 45 44 42 41 41 40 40) (56 50 50 46 46 45 44 42 42 42) (50 47 46 44 44 43 41 41 40 40) (46 45 43 43 42 41 41 41 41 40) (46 43 42 42 42 41 41 40 40) (41 41 40 40 40 40) (41) (40))) :loffset (quote ((0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0))) :lchan (quote ((1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((8) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((11) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((12) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((13) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((14) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((15) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((18) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((21) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((25) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((26) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((27) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 415 23) (om-make-point 1033 395) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 4)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "AS->OM" (quote as->om) (quote ((om-load-inputfun (quote input-funbox) "Analyse" "ANALYSE" nil) (om-load-inputfun (quote input-funbox) "vel min" "VMIN" 40) (om-load-inputfun (quote input-funbox) "vel max" "VMAX" 100) (om-load-inputfun (quote input-funbox) "delta" "DELTA" 5) (om-load-inputfun (quote input-funbox) "midic min" "MMIN" 4000) (om-load-inputfun (quote input-funbox) "midic max" "MMAX" 8600) (om-load-inputfun (quote input-funbox) "approx" "APPROX" 8) (om-load-inputfun (quote input-funbox) "poly. density" "NPOLY" 10))) (om-make-point 358 96) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "echo-cs.sdif" (quote sdiffile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 293 15) (om-make-point 70 50) (let ((newobj (load-sdif-file (om-make-pathname :directory (quote (:absolute "Users" "samdvorin" "Desktop" "music" "audiosculpt" "ChordSeqs")) :device nil :host nil :name "echo-cs" :type "sdif")))) (when newobj) newobj) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 400 500) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 54 128) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7100 6000 6000) (6000 6000 7100 6100 7200) (6000 6000 5500 6100) (6700 6100 5600 6000 7400 6100) (5800 5800 6800 5700 6500 5800) (5800 5800 5700 5800 6800) (5800 5800 5700) (7100 5800 6400 5800 5700 6700) (5700 5800 7100 5800) (5700 7800 6000 5700 7100 6000) (6000 6700 5800 6000) (6400 6000 4500 6000) (4500 6100 5700 5200 6900 4600 6000 7900 5700 4500) (5500 6400 6100 6700) (5500 4500 6000 5500 6100) (6000 5500 5500 5500) (6000 5600 6100 5500 7800 7100) (4500 6000 5500 7800 5200 5200) (5500 7100 5500 6000 7800 5500 5600) (7200 5600 5500 6000 5600 6500 5800 5600 6000) (5600 6500 5500 7900 6000 7200 5600 6000) (5900 5500 5700 6100 5800 8300 7900 6000 4600) (6000 5600 7900 6800 5500 4700 6700 6800 5500 6700 5600 4800) (6100 5500 6000 4800 6100 5500 4700 6700 4800) (7800 7100 6000 5500) (5800 6400 6100 7100 6000 6100) (5700 7100 7800 5700 7200 4500) (5000 4500 6200 5800 6900 6000 5700) (5200 6000 6200) (7100 5100 6200 7400) (5900 5000 6600 5300 5100) (6000 7200 5400 5500 5300) (6000 5400 6000 5000 6100 5400) (7100 5400 6100 7800 6000 5000 7100 5400 6100 5000 6000) (7800 6200 5000 5400 6200 6000) (5900 6000 7200 6000) (6000 5500 6000 6700) (7800 6300 6000 7400) (6700 5400 6200 5000 6300 6200) (6600 6200) (7300) (6200 5400 6200 5900 7100 5400) (6200 7300 5000 5900 5900 5400) (5000 6200 5400) (6200 5400 7300 6600 6200) (6200 5000 3800 6200 7300) (5400 5400 7300 5900) (5400 7300) (6000 5400 6100 6100) (5900 6300 6700 4500 6000 7200 4400 5900 6200) (5500 6100 7300 6700) (6100 5400 6100 7300) (6100 6000 6100 6000 6600) (6100 6700 4900 6100 6000 5400) (5900 5100 6000 7100 6100 5200 5100 7100 6000) (6000 7200 5000 6200) (6100 6000 6000) (6000 4800) (6000 4700 5900 4900) (4700 4700) (6600 5300) (6400 5700 4500 6100) (4500 5700) (5700 6100 7300 6400 5700 5800 5700) (6100 5800 6500 5700 4600 6100 6500) (7200 5700 4500 6000 7200 5700 6000) (5700 4500 6000 4600 6000) (7400 6800 5300 6000 5700 6000) (7100 5600 6000 5600 7400 7100 6700 6400 6000 6800) (4500 5500 6400 7600 7300 4500 5600) (5700 7400 6700 6400) (6400 4500 5800 5500 5600) (7100 5500 5700 5600) (5700 4400 5800 5700 5500 5700 4600) (4500 6400 6000 5700 4600 7400) (6700) (4500 5700 6400 5700) (6400 6500 4500 4500) (6800 6500 5800 4600 5700) (5700 5800 4600 5800 7500 5700) (5800 4600 5700 7300 5800 5800) (5700 6100 5800 5700 5700) (5700 5800 4500 6400 6700 5800 5700) (5700 7100 5800 7100 5800) (5700 6700 5700) (5600 5700) (5900 5200 5900 5200 7400) (5900 6700 5900 5700 5700 5900) (6000 5200 5200 7200 5600 5200 5900) (7800 5900 6000 7400) (5900 5500 6000 5500) (5200 5700 6000 5300 6000) (5600 6100 6400) (7200 6700 5100 7800 5700 6200 5600 6900 5000 5700) (6900 6700 3900 5800) (7300 6700 5400) (6100 5400 6600 6100 5400) (6000 5400) (7200 4500) (6600 6000 6000 5400 7200) (5400 6800) (5200 4400 7200 5100 5600 7600 5000 6200) (4500 5700 8300 6900 7600 7200 5200 5600) (5400 4500 7300 6600) (6100 6900 5000) (4900 4800 4900 5400 4800) (7400 6700 5900 4800 6600 6000 5400 4900) (6000 4700 5900 7400 4800 6000 4700) (5500 6000 4800 6700 6100 6000 6100) (6100 5500 6100 4800 7300 6000 5500 6100 4700) (5100 5000 5100 7000 6300 5100 7800 6200) (5000 5100 5000 6200 5000) (5000 5000 5000) (5000 6200 5000 7200) (6200 6200 6100 5000) (5400 7300 5400 6600) (6200 5700 4500 7600 5400 5400) (7300 6200 8300) (4600 6600 5400 4500 7700 4600) (6000 4500 7700 5400 4600 4500) (6100 7700 6100 4600) (7300 6700 7200 6100 5700 6700) (5700 6100 7600 7300 5700 4500 6100) (6600 6100 5500 5500 7400 5400 4500 6700) (6700 5500 5400) (6400 5700 5300 5300 4600 6500) (4500) (5700 4500 4600 6700) (5700 7200 7400 5700) (7200 5700 5200 7200 5700 5600 5200) (6700 5200 4500 5700) (6000 5700) (4500 5700 5500 5600) (5700 4700 5300 4500 6500) (4700 5300 5600 4800 7400 5500 4700 6500 6000 4800) (7300 5300) (6000 6100 6000) (4600 7300 5300 4500 7900 6000 6100) (6000 5300 6100 5700 4500 6000) (5900 6000 6100 4500) (6300 4900 6200 5100 6900 6000) (5200 5300 6000 5900 5200 4500) (4500 6400 5700) (5700 5700 6700) (5900 5900 5700 6000 7800 7100 5700) (7100 6100 6000 5800) (7200 7900 6500 6100 7100 6000 6100 6000) (6100 6000 7200 6100 5700 6800 6000) (7500 5300 6500 7200) (5700 5800 5700 5700) (7400 6700 5600 6700 5600 7500 6800 6500) (6100 6400 6700 5500 5600) (5500 6000 7200 5600 6100 5600 6000 5500) (6000 5500 7100 7800 6000 6100 5600) (8800 7900 6000 5600 5500) (6000 5400 6000 8300 7800 6100 7400 5500) (6400 5700 5200 6400) (5200 5900) (5000 3800 5300 6200) (5800 6600) (6000 5100 5000 5900 5100 5100) (6000 5100 6000 7300 5100) (4500 6000 7200 5900 6000) (6000 5000 4500 6000 7200 4600) (5500 6000 7200 6000 5500 5900) (5500 4400 6300 5400 5400 6000) (6500 4600 7400 4500) (4600 5200 6600 7300 5700 5000 6200) (5300 4500 6200 5300 5200 4500 5300) (6000 6400 6000 7200 6500 5700) (7800 7100 6000 6100 5000 7300) (6000 4700 6100 4700 6000 4900) (5900 4500 7300 7100) (5000 6000 6000 5400 6600 5900 5500) (6900 7800 5900) (6600 4900 6000 4800 6000 4900 5100) (6200 6200 6700 4800 6900 6000) (6100 4700 6000 6100 4700 7300 6000) (6100 6100 4800) (6300 6100) (6000) (5400) (4600) (7100 6400 7100 6000 7800 7200 7300 6700 5800) (6000 6000 6100) (6000 6700 7900) (5800 6500 5900 6800 8000 6000) (5700 5700 5700) (7400 6400 6000 9300 8300 5500 8400 7300 8800 7800 6100 8000 7200 5500 8300 6700 7400 7900 7000 6500) (7800 6900 6000 7900 6100 4500 9100 7200 7900 7300 6000 7200 5500 8000 7800 6100) (8300 5500 7800 7400 6000 6100) (6900 8300 8800 7800) (6000 5700 5700 8300 4500 6400) (6000 6000) (6600 6000) (5400 7200 7300 5400 6700 6200 5000) (6200 5400 6200 6200 5000) (6200 5400 6600 6900 5400 5000) (6200 6600 6100 7800 6700) (5100 6700 6300 5100) (5100 5500) (8400 6500 5500 8000 7700 7300 6600 7800 6700 6200 9400 7900 6600 5000) (8300 6400 7600 7800 5000) (6500 6100 5000 6900 6000 7300 5400 6100 6000) (7900 7200 6100 6400 5000 6000 7200 5400) (7900 5400 7200 6000 6600 7300 5900 6400) (5400 5400) (6400 6400) (7400 6000 5500 6700) (5500) (6000 5500 6700) (5500 6100) (7300 6100 6800 7200 5800 6500 5600) (5600 6300 5600 6300 6200) (6100 5600 6100 5600 5600 7500 6100 5500) (6800 5600 6500 5600 6700) (6000 5600 8000 7200 8000 6700 6400 6100 7300) (6000 7200 6000 7300 6100 5600) (7200 6200 6000) (6000 7200 6700 5500) (6000 6100 6000 6200) (6000 6000) (6200 6000 6200 5000) (6600 5000 7200) (5000 5000) (5400 7300 6600 6000 5500 5100) (6000 5500 6100 6100) (6100 5500 6700 6000 7900 6100) (7300 6700 5100 6100 6000 5500) (6100 6600 6000 6100 6000) (6100 6100 6600 5500 6100 6000) (9400 8500 8100 7400 6100 5500 7800 7200 6700 6500 6000 7200 6100) (5500 9100 6700 6000 9100 6600) (5600 7800 6700 5500 5500) (6900 6400 6600 5600 7800 6000 7700 5700) (6700 5600 9400 6800 6000 5500 8500 6600 5700) (5400 6700 6600 5400 7400 5400) (6600 5600 6400 5500 5500) (8300 7900 6500 5400 6000 7700 7200 6800 6400 5700 6700) (6400 5500 7500 5300 9200 7600) (8300 5500 6100 6500 6400 5500 6100 6500) (6300 5700 7400 6100 6400 7500 5500 6100) (5500 6700 6800 6200 5100 8000 7300) (6300 5100 6200 7000 6300 6200) (5900 5500 7300 5000 6100 6100) (6100 8000 7300 6700 5500 6600 6000 6700 7200 6300 5800) (6700 6000 6100 5500 6700 6000 6100 6700 6000 5500) (6100 5400 7300 6000 6600 7200 5900 7800) (6100 4900 6000 6700 5900 6000 7800 7100 5400 6600 6100) (5900 6000 6700 5900 6000 6600) (6600 5900 7100 7200 7000 5900 7100 7000 6200 4800) (6000 5500 7800 6700 7900 7200 6600 4800 7300 5900 6700 5500 5800) (6700 6000 6600 5500 5900) (8100 6600 6000 5500 7900 6600 5600 5900) (5900 7800 6700 8700 6000 8100 4800 7100 6600 5500 7200 5800 4800 6700 5900) (7600 6000 6700 5600 7200 6100 6600 5500 6700 6000 7500) (5500 7800 4800 8600 5600 6000 5900 5500 7800 7100) (8100 7800 6000 7200 5900 6000 4800 7800 5900) (5700 6700 7300 6400 6000 5600 6800 7500 7300) (6800 5500 6700 5500 6100) (6700 5700 6800 6500 5500) (6800 6100 5600) (7400 6400 7300 6700 6400) (5500 6000 5500 5600 6000 7200 6400 5500) (5700 5500 5500) (6400 6400 6000) (6000 6700 5700) (5500) (5500 6000 5400 6600 5700 6200 5000 6900) (5400 6100 6000 5400 7300 6000 7300 5400) (5100 6000 6100 5500) (6700 6300 7200 6200 6100 6000 6700 5500) (5500 6300 6200 6300 5500 7300) (6200 5400 6600 6300 6300) (6600 6000 7300 6200 6300) (7300 7200 5400 6100 6000 5400 7200 6100) (6100 6000 6100 6000) (5400 6000 5400 6000) (6000 7200 5400 7300 7100) (5400) (6000 9400 8100 8000 6100 8500 6600 7800 5900 6700 6800 5500) (5500 8600 6700 9100 5500 5600) (6000 7400 8600 5600 8300 7600 5700 7200 5600 8300) (5700 6400 5500) (6600 7300 6700 6000 7200 6600 7800 5500) (6600 6100 7800 6700 6100 6600 6500 6000 5500) (7900 6500 6100) (5500 8400 6400 5400 8000 6100 7300 6500 6600 8500 7800 9400 6700) (8300 6100 5500 8800 7700 6000 7800 6400 6100 8000 6500 7700 5500 6100 5600) (7500 7200 7800 6100 5500 6700 8000 6000 5600 7800) (6700 6200 6300 5500 7200 6200 5600 7300 6700 7400 5600 6300) (5500 6200) (6900 6000 6100) (7800 6000 6100) (5500 6200 5500 8700 5900 7100 6200) (6600 5500 6600 6200 5900) (5900 8700 5000 6200) (7200 5800 4800 6900 7200 5800 6000) (7200 5900 5500 4800 5800 6700) (7300 6000 5500 4900 5900) (7300 6000 6800 6800 7300) (6000 5500 4800 6700 6800) (6000 5500 7200 4800 5900 4800) (6000 4800 5900 5500 5600) (6800 6000 7200 5900 5500 7100 6800 8000 6700 6000 8300 7300 7800 6700 5900 5500) (6700 6000 8300 7800 5900 8400) (7400 7300 6700 7200 5900 5500 7800 7200 6700 5900 5600 4700) (6000 5500 5600 5400 4500 6000 5500 7200) (6000 5500 5600 5500 6400 5400) (5500 5600 6000 5500) (5500 6000 7200) (5500) (6400 5600 6700 6100 5600 5600) (7400 5500 7200 6000) (5600 6100 5500 7300 5500 5600) (5500 5600 6500 5500 6400 5500) (6800 6100 5600 7300 6800 6500) (6000 5400 6600 5500 8000 6100 6700 6200) (6000 6000 5400 6100) (6000 6000 7200 7900) (6100 6000 6000) (5400 7200 6200) (5400) (5400) (6000 5400 7200 6600) (6000 6000 5000) (6000 6000) (7300 5000 7200 6100 5400 5000 6600 7300 6200) (6100 6000 5400 6100 6000) (5400 6100 5500 5400 6100) (8300 7400 6100 5500 6700 8000 5400 7800 6800 6500 8100 6100) (8900 8100 6700 7800 6800 5500 9100 6700 6800) (8000 6700 5600 6600 5500 6700 6800 7400 5400 6700 6800) (7800 6000 5600 5500 6700 5500) (6600 6000 7200 5500 6100 7300 6700 5700 6600) (5500 6600 6700 6000 5500) (7800 6700 5500 5400) (7200 7700 6400 9300 8900 8400 6500 5700 8500 9400 6600) (5400 6400 5300 6400 9200 8300 7600 5400 6500 6000) (5500 6300 5400 6000 8300 5400) (7200 6200) (6200 6000 6300) (6100 6200 6200 5100 6100) (6600 6100 7300 6000 8000 6700 6800 6300 6000) (6600 6300 7300 5500 8000 6200 6600 6100 6000 5500) (6700 6300 6000 5500 6700) (8000 7200 7300 6200 7000 6700 6300 5500) (6100 5000 6700 6000 6600 5000 6100 7300 6000) (6600 6000 5500 6000 5000 6700 5900 6000) (5900 7200 5500 6100 7100 6000 5500 5000 6700 5900) (7200 6600 5900 6000 5500 7300 6600 7200 6700 5900 4900 6000 6500) (6000 7900 4800 6000 5500 5900 4900 6000) (5900 7000 6000 4800 7800 7100 6700 5500 6600) (4800 8700 7500 6600 8300) (6700 5500 6600 6700) (5900 6000 7800 5500) (6400 6000 5500 7200 6100 6400 5600 7400 6700 5700 6600) (5600 6400 6000 7400 5500) (6400 6100 7300 6000 6000 5500) (7300 6700 6500 5600 7200 6800 5500 6100 6700 6000 5600) (7900 7500 5500 5600 6100 5600 6800 6100 5500) (6500 5600 5500 7900 5600 6500 5600) (6500 7900 6100 5600) (6700 6000 5600 5600 6800 5600) (6000 5500 6100 5500 6400 7800 5600 6100 5500) (6000 7200 6100 6000 6100) (6000 7100) (6100 5500 7200 6600 6200 7100) (5400 5000) (5400) (8000 6100 7300 6500 6700 5800) (5600 6400 6400) (8000 6000 6000 6400 6100 6000) (6400 6000 7900) (6000 5700 5700) (6000 6000) (5500 6200 6600 5400) (5500 5000 5500 7200) (5400 6200 5500 5000) (5000) (5400 6200) (5000) (7300 7200 6600 6200 5500 6700 5000 6300) (5400 6100 6700 6100 5300 7900 7000 6000 8000 5400) (6100 6000 5100 5500 6100 5100) (5100 6100 5400 6600) (7200 6000 7300 7300 6600 6000 5500 7100) (6000 5400 7200 6000 7200 6100) (5400 5400) (7400 6000 5500 6700 6400) (5500 6700 5500) (6000) (5500 5500) (5600 6100 8000 6000 5000 7300 6700 5800 6400 6800 5700) (5100 5500 6500 5600 5600 5100) (5600 5600 5600) (7300 6100 6800 5600) (4900 4900 5600 6700 6500) (6100 4800 6400 6000 6100) (7200 5500 6600 6100 5000 6900 6200 6000) (6100 6000 5500 6100 6000 5000) (6000 5500 6000) (6200 6000 6200) (6200) (7200 6600 5900 5000) (5400 6100 6000 5400 6000) (5400 7300 6000 6000) (6000 7300 5100 6700 6100) (6100 6000 6700 6100) (6100 6000 6100) (6600 6000 6600 6100 5500 7300 6700 5800) (6400 6000 7200 5500) (6000) (6000 6700 5700 5500 6700) (5400 5400) (6700 6400 5400) (6400 6700 5100 6500 6000 6700) (5200 5200 5200) (5600) (6100 7300 5600 6000 5100 6000 7200 5100 6700 6200 5000) (8000 6100 5100) (5500 6100 5100 7300 6700 6200 5100) (6600 6100 6000 5000 6700 6300 6000 5000) (6600 6100 4800 6700 6100 6600 5000 6100) (5000 6200 6000 6100 5400) (4800 6000 7200 6100 7200) (6000 4800 6000 4800 5900 5400) (6100 6000 4800 4800) (5400 6000 7900 7200 7300 6600) (6000 5400 6000) (7100 5000 5400) (4800 6000 6600 6200) (4700 5900 4800 5400 4700 6000 4700 5900) (4700 6000 4800 5900 6600 6000) (7300 6400 6700 4700 6000 4800) (6500 6100 6100 6100) (6500 6100 6800) (5700 6100 7300 5600 6800 6500 5700) (6400 5500 6100 5600 6700 5600 5500) (6100 5600 6500 5600 5600) (6400 5500 6000 5500) (5500) (6000 5500 6700 6400) (5500 5500) (6000 6000 7200 5400 6600 6200) (5400 6000 6100 5400) (6100 6000 5400 6100 6000) (5500 6200 5500 6100 7300 6000) (5500 6300 7300 5400 6600 6300) (5500 6300 6200 6700 6300) (6200 6300 5500 6300) (5400 6000 6600 5400 6000 6700 6100) (7300 6000 6100 6000 7300) (6000 7200 6000 5400 6100) (6000 5400 6000 5400 7200) (6000 6700 6400 5500) (5500 7900 5400 6600 5300) (5400 6600 6000 6400) (5500 6000 5400 6000) (6100 6100) (6100 5300 6800 6500 6100 5300 6000 7300 5400) (5300 5300 6500 5300) (6300 5100 5300) (6100 6100 7300 6700) (6000 5500 5000 7200 6100 5100) (6000) (5900 6600 4800 7200 6700 5800 6200) (4800 4700) (4700 6600) (6000) (6000 6000) (7300) (6000 5500 7200 6000 5500) (6000) (5400))) :lonset (quote (0 198 337 442 558 663 779 907 1035 1151 1267 1372 1488 1605 1733 1884 1988 2093 2198 2302 2419 2523 2628 2733 2860 2965 3070 3221 3337 3453 3558 3698 3814 3930 4035 4140 4256 4360 4477 4593 4744 4907 5012 5140 5244 5372 5547 5651 5826 5930 6047 6174 6279 6395 6500 6628 6733 6837 6953 7058 7186 7349 7523 7640 7744 7849 7953 8070 8186 8302 8477 8616 8721 8826 8930 9081 9221 9360 9488 9593 9698 9802 9919 10023 10140 10244 10360 10477 10674 10791 11023 11128 11256 11360 11477 11605 11709 11814 11942 12058 12174 12395 12512 12628 12802 12907 13012 13128 13233 13349 13465 13581 13698 13802 13942 14279 14395 14500 14616 14733 14837 14942 15047 15209 15337 15453 15558 15674 15849 16023 16140 16326 16442 16570 16709 16826 16930 17047 17151 17256 17372 17477 17628 17767 18128 18314 18430 18535 18663 18767 18884 18988 19093 19198 19302 19407 19512 19686 19791 19895 20035 20174 20291 20407 20535 20663 20767 20872 20977 21081 21186 21291 21442 21593 21698 21884 21988 22093 22244 22349 22512 22628 22767 25442 25547 25651 25779 26012 26221 26326 26453 26558 26686 26814 26930 27058 27174 27279 27419 27570 27674 27791 27895 28012 28116 28244 28407 28512 28640 28907 29047 29209 29360 29465 29581 29709 29814 29942 30105 30209 30326 30453 30558 30663 30779 30988 31093 31198 31326 31430 31558 31709 31814 31942 32047 32163 32279 32384 32512 32616 32733 32837 32977 33128 33244 33349 33453 33558 33709 33826 33953 34058 34163 34267 34372 34477 34581 34686 34791 34895 35000 35105 35209 35326 35453 35570 35930 36163 36279 36384 36512 36616 36756 36860 36988 37105 37209 37314 37419 37535 37756 37860 37965 38070 38209 38314 38465 38570 38709 38826 38930 39035 39140 39244 39349 39465 39616 39733 39849 39977 40081 40198 40302 40477 40593 40698 40802 40907 41023 41140 41279 41419 41570 41674 41791 41895 42012 42349 42465 42570 42674 42779 42919 43047 43174 43279 43384 43535 43640 43756 43872 43977 44081 44198 44302 44442 44558 44663 44767 44907 45023 45128 45291 45395 45500 45651 45756 45872 45977 46093 46198 46314 46430 46547 46686 46791 46907 47035 47140 47256 47360 47465 47581 47698 47802 47919 48047 48395 48523 48686 51267 51384 51512 51640 51767 51907 52047 52163 52291 52395 52523 52674 52826 52930 53058 53163 53267 53372 53535 53651 54012 54163 54337 54477 54581 54686 54802 54919 55105 55209 55314 55453 55593 55698 56047 56151 56279 56395 56500 56616 56814 56930 57035 57151 57256 57430 57605 57721 57837 57977 58116 58326 58430 58535 58663 58767 58872 58988 59105 59233 59360 59465 59570 59674 59791 59895 60000 60209 60360 60465 60605 60721 60930 61058 61326 61442 61547 61651 61756 61872 62000 62116 62233 62337 62477 62791 62895 63233 63360 63500 63640 63779 63907 64012 64140 64256 64372 64477 64663 64988 65221 65570 65965 66721 69744 69791)) :ldur (quote ((151 35 35) (46 35 46 35 46) (35 24 128 23) (46 47 24 35 47 23) (23 23 59 24 337 23) (23 23 23 24 244) (23 24 23) (47 23 337 23 35 46) (23 35 105 23) (23 46 23 23 338 23) (34 175 23 24) (151 47 46 47) (186 35 35 46 35 23 23 489 24 47) (35 663 58 662) (70 267 186 35 34) (23 35 23 35) (23 23 23 23 140 268) (93 35 24 58 23 23) (23 47 23 46 35 23 23) (24 24 23 35 23 104 23 23 24) (23 139 23 58 23 128 47 23) (24 24 24 23 23 395 139 35 35) (46 46 35 24 23 35 23 23 23 23 23 70) (104 35 24 35 35 35 35 348 34) (128 47 35 187) (23 58 24 93 35 23) (58 326 314 35 35 232) (35 70 47 23 82 23 35) (70 23 23) (81 35 326 152) (23 24 104 24 23) (23 163 24 23 23) (24 35 24 58 23 70) (47 35 23 93 35 35 47 23 24 23 23) (58 24 35 46 23 35) (23 23 47 46) (35 163 24 279) (35 23 35 35) (23 325 34 23 23 23) (616 337) (35) (81 23 23 35 732 58) (23 47 35 476 23 81) (58 35 58) (35 186 70 756 23) (291 93 128 34 70) (35 35 70 104) (198 105) (35 58 24 23) (24 23 35 105 24 70 23 35 23) (151 93 116 232) (47 35 47 140) (35 23 23 23 174) (23 24 47 46 24 35) (23 47 23 70 23 23 24 47 47) (23 186 186 46) (23 47 23) (128 116) (326 59 58 24) (69 35) (47 35) (268 117 198 23) (58 105) (35 46 151 58 23 23 23) (23 23 302 35 128 35 58) (46 23 58 23 46 23 23) (23 81 24 35 35) (47 23 35 23 23 35) (47 24 23 23 174 47 186 128 23 23) (303 35 58 58 198 70 47) (46 384 558 163) (210 70 23 46 24) (58 35 35 23) (23 23 24 24 23 23 46) (244 152 245 23 23 128) (105) (35 198 34 46) (82 23 93 59) (361 418 58 24 47) (24 23 116 24 384 23) (23 93 23 209 23 23) (23 35 24 23 24) (23 23 360 1256 174 23 23) (47 628 23 35 24) (23 267 46) (23 23) (23 140 23 23 303) (23 604 23 23 23 23) (24 24 23 163 23 23 35) (186 23 35 186) (24 24 23 24) (35 23 23 46 23) (23 69 35) (117 35 94 81 58 70 24 93 23 35) (46 93 58 70) (162 104 35) (47 35 361 47 35) (47 46) (35 151) (372 139 35 70 58) (197 35) (35 93 47 35 35 34 46 58) (35 35 82 70 256 93 105 81) (105 105 291 430) (23 70 105) (23 24 23 46 23) (58 151 23 35 35 58 46 35) (24 58 23 82 35 46 46) (23 35 35 163 23 35 23) (23 23 24 35 58 23 35 23 46) (23 23 23 47 93 23 407 23) (23 23 24 256 24) (35 34 23) (70 116 23 279) (453 23 23 349) (58 209 23 279) (23 70 139 163 35 24) (476 290 35) (47 268 47 46 35 24) (23 23 47 23 47 34) (58 70 23 244) (70 163 24 23 23 46) (23 23 58 70 35 117 46) (82 151 23 23 35 23 58 93) (46 46 47) (1035 233 23 35 93 82) (151) (70 267 24 535) (70 175 198 70) (326 35 70 34 34 24 35) (314 24 198 116) (23 34) (35 23 24 23) (23 24 23 24 35) (47 23 24 35 35 23 23 69 186 35) (186 279) (35 47 35) (58 70 93 23 47 58 23) (34 69 23 23 58 47) (35 46 24 163) (23 23 46 23 70 23) (35 35 23 35 35 70) (46 849 151) (290 23 361) (23 23 24 23 384 256 35) (47 35 35 23) (24 162 151 23 23 35 24 23) (35 23 24 35 23 256 35) (35 35 175 104) (35 23 23 35) (151 23 24 23 35 82 58 139) (35 372 372 23 24) (24 46 70 23 35 24 35 23) (35 35 163 186 23 24 23) (186 186 35 23 70) (81 35 46 35 47 12 35 70) (58 81 35 35) (69 105) (151 140 24 325) (23 384) (23 23 23 35 24 23) (23 35 23 105 35) (23 35 46 23 23) (47 35 58 23 70 58) (70 46 23 35 47 23) (23 23 46 23 23 46) (35 70 93 35) (35 24 151 163 23 46 58) (23 198 70 35 23 23 23) (70 35 35 93 35 35) (116 116 24 23 70 58) (93 23 24 23 46 23) (58 104 58 302) (198 24 23 23 337 35 23) (186 314 35) (47 35 24 23 23 23 23) (23 23 69 58 47 70) (23 23 23 47 23 337 23) (23 58 23) (58 23) (35) (116) (35) (244 116 23 47 163 24 23 47 23) (35 46 23) (35 139 105) (23 244 35 82 81 35) (70 34 23) (105 372 24 302 197 35 58 58 210 47 35 58 23 23 35 70 34 35 23 35) (34 46 46 314 12 244 35 687 23 11 46 12 23 23 69 23) (69 23 70 58 256 12) (163 58 128 395) (23 58 34 244 139 163) (47 46) (82 128) (35 186 35 23 279 116 82) (81 35 23 23 70) (23 35 70 117 47 70) (23 174 23 186 23) (35 186 209 35) (70 47) (46 46 23 256 47 151 47 46 11 34 46 24 24 35) (47 105 976 349 35) (35 35 23 128 24 58 35 23 23) (47 70 23 82 35 23 23 47) (151 93 744 349 338 23 23 35) (175 35) (360 46) (47 372 244 383) (128) (35 82 348) (35 70) (360 23 279 23 23 46 59) (23 23 35 23 35) (117 24 23 23 23 59 24 24) (58 23 82 23 70) (23 23 46 93 35 244 337 47 46) (70 128 24 35 35 23) (35 58 58) (23 361 314 686) (23 23 23 23) (24 24) (384 24 23 47) (244 46 81) (128 47) (35 337 151 70 35 35) (24 35 23 23) (23 46 174 35 175 23) (302 105 46 35 23 46) (35 69 23 47 23) (47 24 93 47 24 23) (47 82 35 47 35 70 93 360 35 24 34 46 24) (46 140 128 198 35 58) (24 35 104 35 35) (35 58 35 24 35 70 34 23) (58 23 186 23 326 47 35 58 35) (24 128 35 23 35 23) (35 23 24 23 23) (174 139 104 35 47 46 290 35 34 23 35) (24 24 35 23 82 233) (35 35 23 93 23 35 35 23) (105 34 35 24 58 46 35 35) (244 302 23 70 35 314 325) (12 23 47 128 23 23) (23 23 46 24 47 23) (35 34 151 34 23 24 46 35 70 23 23) (34 23 24 70 35 23 12 23 23 24) (23 35 23 58 117 23 23 35) (24 24 11 47 24 11 128 221 23 70 47) (23 35 198 23 12 23) (23 23 70 35 35 35 23 24 35 35) (12 47 139 93 81 35 35 35 24 70 23 70 23) (47 34 23 58 70) (35 35 58 58 81 35 23 47) (35 59 35 105 23 35 23 128 34 35 46 23 35 47 23) (209 46 221 23 11 23 23 46 47 47 70) (47 23 47 58 34 58 12 35 59 24) (47 35 35 69 23 24 82 58 23) (23 70 349 23 23 23 58 46 35) (58 23 23 46 198) (47 24 46 104 70) (23 209 69) (198 35 105 686 47) (35 163 23 23 35 209 232 23) (23 47 24) (512 46 337) (337 233 23) (35) (24 35 34 279 24 46 23 47) (35 47 23 35 290 23 23 35) (46 23 24 35) (210 47 35 23 35 23 70 70) (70 24 23 24 70 279) (23 81 128 24 24) (675 24 47 46 24) (23 24 152 23 23 47 23 35) (23 35 23 24) (35 47 35 46) (337 373 70 46 34) (221) (128 82 58 46 23 105 105 140 24 23 24 35) (24 69 279 93 35 35) (105 34 70 35 47 47 35 221 23 35) (23 81 35) (12 279 23 35 35 58 140 93) (105 35 82 47 35 23 23 35 163) (23 23 105) (46 151 93 23 105 35 291 35 11 35 47 46 46) (58 35 46 47 23 23 35 140 23 35 23 34 34 23 24) (23 23 81 23 82 93 47 35 23 34) (477 11 12 47 372 23 23 23 35 174 23 47) (256 105) (81 81 23) (419 35 23) (35 23 35 47 81 396 23) (127 23 35 24 209) (47 47 58 24) (81 12 70 47 58 23 23) (47 46 69 69 23 209) (35 151 256 198 23) (128 58 23 23 35) (70 117 47 360 23) (117 82 59 139 58 35) (23 35 35 23 35) (70 47 24 23 35 23 23 34 35 35 35 46 35 23 35 23) (23 47 58 47 34 46) (117 23 768 35 58 23 35 23 35 23 35 47) (70 23 23 24 47 47 23 337) (58 35 23 23 628 24) (104 23 81 58) (35 360 384) (34) (221 23 314 23 35 23) (291 105 152 163) (23 152 23 186 23 23) (70 24 47 23 35 24) (117 279 23 500 47 337) (23 35 372 35 186 35 46 35) (23 23 290 47) (23 23 175 163) (23 24 24) (93 349 47) (58) (69) (47 35 337 338) (23 35 47) (35 46) (674 35 23 23 47 35 314 34 35) (23 35 35 23 23) (35 46 35 47 23) (58 47 314 59 35 186 23 46 35 23 35 47) (35 35 23 151 23 70 47 23 35) (93 24 24 23 34 35 12 35 35 23 12) (128 23 35 46 93 23) (82 70 349 70 23 34 34 23 24) (23 93 23 268 81) (93 70 70 35) (314 47 23 46 58 46 11 34 59 70 70) (35 151 23 24 128 116 221 58 35 105) (442 35 24 58 69 35) (372 105) (93 23 58) (23 23 23 35 23) (24 24 70 11 58 23 23 23 47) (58 23 116 58 116 46 23 24 11 23) (47 93 46 46 35) (58 23 34 23 35 58 35 35) (24 35 23 23 23 23 23 198 12) (23 23 23 23 46 35 24 23) (23 35 47 23 46 23 35 24 23 35) (232 116 35 23 58 23 23 23 35 35 35 12 23) (46 105 58 35 70 23 35 23) (360 23 35 47 373 24 105 70 23) (302 47 58 128 69) (163 35 46 23) (23 24 58 81) (58 104 23 256 24 46 23 140 256 12 23) (24 58 35 152 81) (104 35 24 23 46 116) (604 23 93 23 23 35 23 70 58 23 58) (46 70 23 23 163 23 349 35 24) (82 23 24 81 23 59 23) (35 116 198 105) (418 23 23 23 58 35) (24 546 46 23 186 197 23 35 24) (35 70 23 24 34) (326 34) (23 116 349 244 34 35) (47 47) (35) (279 209 268 93 58 35) (23 47 35) (35 58 23 151 35 23) (151 47 81) (46 58 35) (116 46) (47 174 476 69) (69 47 24 337) (35 82 46 46) (70) (151 244) (35) (360 35 23 23 47 35 35 46) (24 23 128 23 23 221 70 24 325 23) (23 24 23 24 23 23) (24 69 35 116) (24 23 23 24 361 58 35 35) (210 81 628 23 24 47) (70 35) (35 361 314 384 35) (233 396 58) (104) (34 35) (23 302 314 23 46 337 151 23 35 23 23) (70 23 232 23 23 82) (35 23 23) (245 139 70 24) (70 35 23 197 34) (23 58 69 46 35) (35 81 721 70 35 58 24 35) (23 23 70 23 23 709) (24 35 24) (35 24 23) (395) (128 337 35 34) (47 46 24 35 23) (47 70 34 23) (23 373 35 46 47) (47 23 209 35) (116 23 24) (23 35 23 35 59 93 35 35) (291 35 256 210) (139) (337 35 47 35 35) (70 81) (81 93 70) (221 291 24 46 337 35) (23 24 23) (23) (46 279 23 23 70 23 58 23 198 24 23) (152 186 93) (34 23 23 361 82 23 34) (24 23 23 35 35 24 23 23) (453 23 35 24 23 23 23 23) (35 34 24 23 58) (24 46 291 23 24) (23 23 35 35 23 47) (23 23 23 24) (35 70 232 337 24 325) (162 58 46) (59 93 35) (23 70 163 35) (70 34 23 151 24 35 24 35) (35 46 23 24 105 35) (337 58 140 23 35 35) (35 35 23 24) (163 267 198) (24 116 302 35 174 151 35) (82 23 116 23 163 23 24) (46 34 35 23 23) (244 69 337 23) (209) (338 35 209 244) (58 23) (46 23 279 70 360 69) (58 23 23 35) (23 23 93 35 23) (47 23 35 47 23 35) (70 23 419 58 117 46) (82 23 24 186 23) (35 46 47 23) (128 23 628 35 23 47 35) (23 23 24 23 69) (46 58 23 116 35) (267 244 58 35 360) (349 58 58 46) (221 58 34 81 24) (46 186 70 58) (24 34 69 47) (58 35) (232 46 267 116 35 24 23 314 34) (23 23 93 23) (23 140 23) (23 35 139 232) (35 70 35 186 24 23) (104) (349 163 35 325 34 23 70) (23 23) (93 163) (47) (35 46) (290) (35 35 245 46 23) (139) (47))) :lvel (quote ((13 17 14) (38 37 18 31 18) (42 40 41 35) (17 37 45 42 9 31) (40 40 16 43 23 35) (40 40 42 39 14) (41 43 44) (29 48 20 45 44 11) (48 48 28 46) (43 9 49 45 31 49) (49 13 45 47) (28 49 9 48) (45 12 40 45 10 40 37 16 44 20) (54 25 12 41) (51 12 39 53 23) (46 48 44 48) (48 51 36 42 18 31) (18 49 50 13 53 51) (49 30 38 48 11 42 50) (31 54 47 50 53 21 46 55 45) (49 31 46 19 48 30 44 40) (39 31 58 32 49 13 21 48 19) (39 35 15 31 32 44 34 33 33 36 36 44) (42 33 47 32 43 33 40 32 39) (16 32 48 35) (52 17 36 32 51 41) (47 34 15 50 32 30) (24 24 49 42 41 47 45) (52 50 42) (17 54 43 13) (33 44 15 46 53) (45 29 35 45 53) (38 37 38 36 41 39) (27 34 41 15 46 33 28 32 38 34 39) (10 30 30 30 35 45) (29 40 26 41) (38 44 40 52) (10 42 39 27) (45 45 41 35 41 44) (45 40) (18) (36 32 33 42 42 34) (30 10 22 44 40 33) (21 31 25) (29 46 15 46 29) (51 51 25 39 12) (40 40 17 44) (39 19) (38 34 36 36) (35 30 37 43 35 25 41 44 39) (30 57 33 37) (53 28 55 31) (48 54 48 55 35) (52 33 51 55 54 23) (33 35 55 26 48 36 36 25 55) (35 17 31 25) (47 37 36) (60 50) (58 41 34 39) (39 39) (48 38) (24 38 31 42) (19 45) (44 27 16 20 45 41 42) (32 36 21 43 15 27 22) (28 39 11 41 28 39 40) (40 13 38 13 42) (18 41 52 34 37 43) (24 50 40 47 17 25 43 16 37 45) (43 35 26 14 23 44 54) (46 23 41 25) (23 46 41 36 42) (34 37 50 54) (36 32 30 34 32 37 41) (37 17 32 39 41 12) (13) (19 48 17 44) (36 37 30 21) (39 37 46 29 47) (51 42 26 48 12 52) (46 25 49 16 44 46) (46 26 43 49 49) (46 44 22 34 31 43 48) (46 16 40 13 41) (46 25 42) (34 45) (41 47 34 48 24) (32 37 32 40 35 42) (41 38 39 29 42 38 39) (16 44 41 14) (39 35 38 36) (21 29 32 19 39) (29 41 25) (19 13 54 14 29 51 32 31 32 30) (12 27 24 25) (21 26 25) (21 21 23 21 21) (32 19) (15 44) (37 33 16 21 12) (36 25) (58 39 14 57 51 20 58 46) (20 47 16 15 25 33 55 57) (40 18 37 38) (37 12 59) (41 46 42 35 48) (22 27 39 20 26 41 33 43) (48 29 41 16 27 50 33) (34 47 25 34 30 48 32) (35 40 37 18 21 45 32 32 29) (40 43 40 12 44 43 15 44) (40 40 41 42 42) (37 39 40) (36 40 36 27) (39 34 41 34) (34 27 33 41) (34 49 45 19 41 29) (38 29 11) (43 45 35 42 9 43) (35 37 12 29 42 40) (39 13 38 40) (30 39 35 36 32 39) (30 35 12 36 37 26 35) (33 13 31 33 11 29 11 35) (30 27 26) (38 48 30 30 41 40) (40) (50 15 29 36) (48 21 12 52) (22 46 45 23 47 43 47) (16 31 12 47) (38 46) (13 41 35 39) (43 35 37 41 9) (37 32 32 37 16 36 38 13 41 39) (28 30) (48 42 49) (34 25 28 29 10 54 33) (52 29 31 32 31 45) (36 51 34 29) (33 32 52 40 40 31) (22 20 32 32 28 22) (19 30 39) (43 42 19) (44 47 42 38 30 48 41) (47 56 59 45) (45 18 28 47 42 62 48 60) (52 60 44 53 43 28 60) (24 42 35 40) (28 31 36 37) (10 36 43 37 42 12 38 23) (30 24 35 33 40) (33 38 23 39 28 40 38 32) (43 38 58 23 48 37 40) (23 34 71 37 36) (75 37 75 12 21 66 13 49) (26 43 21 17) (35 23) (59 23 45 46) (30 21) (40 34 30 33 36 36) (36 32 39 25 33) (39 43 29 33 41) (39 24 37 40 29 39) (32 41 29 40 34 36) (46 29 27 36 31 41) (20 45 22 43) (41 61 45 34 46 60 27) (58 42 19 61 56 41 62) (41 16 42 25 18 46) (13 35 52 49 62 30) (59 45 45 44 49 55) (57 34 24 29) (57 50 58 32 24 62 32) (19 24 49) (15 58 52 52 53 57 49) (40 40 17 54 14 52) (40 35 43 47 42 33 46) (38 39 33) (21 35) (16) (9) (12) (43 14 45 56 35 53 49 38 32) (36 46 36) (32 34 21) (30 13 16 26 9 22) (29 29 32) (26 43 70 12 33 52 28 72 34 38 67 43 69 54 16 60 52 16 34 44) (28 24 71 38 65 18 11 71 37 71 70 72 43 40 34 65) (18 45 23 23 70 66) (30 16 25 24) (33 41 41 12 13 46) (39 37) (62 33) (34 30 30 32 62 43 36) (40 30 39 38 32) (39 29 29 9 26 31) (29 49 36 41 46) (23 28 25 23) (21 17) (19 65 35 14 47 44 71 67 73 28 22 61 66 20) (15 59 46 20 27) (39 49 29 9 48 41 31 49 48) (9 39 47 37 27 44 40 26) (9 29 46 40 32 39 38 34) (23 27) (36 24) (11 43 33 36) (32) (11 19 22) (16 10) (53 53 37 43 43 26 20) (37 52 38 56 60) (49 36 48 37 37 11 50 35) (29 35 23 37 32) (34 33 20 49 20 30 22 48 54) (55 42 36 41 36 31) (29 42 54) (38 31 58 51) (38 43 43 42) (39 40) (32 38 39 24) (9 19 12) (18 19) (21 38 22 38 26 17) (37 18 37 32) (30 22 20 36 10 30) (34 22 17 27 32 22) (41 20 40 41 40) (31 39 19 13 35 39) (16 18 11 17 36 43 74 37 64 41 30 27 32) (47 27 73 35 23 78) (49 33 79 51 46) (10 30 47 36 25 36 29 44) (78 46 17 69 35 49 12 77 30) (57 78 80 43 13 58) (48 33 47 54 46) (22 12 78 45 40 58 40 20 30 29 32) (74 55 11 48 13 50) (13 59 38 78 72 57 41 79) (77 33 53 49 64 17 50 41) (50 48 33 74 35 15 47) (66 32 68 16 71 71) (50 52 59 35 57 59) (65 20 45 60 43 46 64 44 63 40 61) (53 61 66 49 51 68 67 56 61 51) (40 26 36 69 36 36 59 9) (55 30 65 37 69 65 42 64 33 33 69) (68 74 55 65 66 40) (44 58 36 30 36 67 36 39 38 28) (72 47 19 60 14 48 58 26 32 69 57 50 61) (50 63 40 48 72) (11 43 71 47 14 56 39 65) (72 54 48 32 63 20 32 74 50 44 36 44 25 54 52) (14 73 59 34 66 40 51 42 53 77 13) (42 34 15 10 35 71 73 40 42 62) (16 19 75 46 69 66 19 35 59) (50 49 38 37 51 52 50 27 16) (48 41 55 51 36) (34 38 36 14 54) (30 36 47) (28 16 37 44 19) (39 35 40 44 35 35 17 40) (30 37 35) (22 12 46) (46 30 32) (29) (29 46 31 28 31 42 29 11) (25 47 50 27 43 48 46 26) (20 45 48 24) (23 34 19 35 43 42 26 22) (19 35 34 33 20 28) (33 17 20 32 32) (31 47 34 40 31) (37 35 25 48 49 28 41 46) (44 47 41 48) (19 47 22 47) (39 37 29 14 23) (21) (39 25 27 38 29 31 76 71 34 48 33 16) (50 19 84 27 60 49) (35 14 28 54 10 17 51 28 56 19) (29 26 23) (70 23 70 33 20 74 57 52) (69 26 53 80 24 70 58 31 45) (58 33 28) (58 22 73 43 17 39 44 80 66 19 63 17 69) (20 36 53 17 46 37 10 76 37 9 69 49 58 41 49) (48 37 12 42 48 42 9 39 43 12) (44 66 66 32 48 57 37 32 23 61 40 70) (45 63) (13 46 60) (45 49 52) (47 32 48 15 67 73 46) (30 44 41 35 69) (56 10 25 33) (23 65 20 31 34 63 61) (21 63 47 20 57 43) (13 64 44 27 46) (25 55 41 36 13) (70 43 23 52 36) (66 43 33 23 52 19) (66 25 62 45 36) (37 66 42 61 46 32 33 14 39 69 15 36 29 48 67 44) (44 62 18 36 60 20) (33 35 66 20 55 45 21 30 46 56 43 15) (39 63 62 51 10 38 68 37) (38 50 63 63 24 56) (53 48 37 60) (30 30 23) (30) (23 41 37 34 32 31) (12 37 45 44) (35 37 32 41 33 36) (23 36 18 33 16 34) (18 27 29 53 19 17) (55 28 38 31 19 51 40 34) (50 50 29 53) (45 45 47 10) (44 46 46) (18 13 29) (15) (12) (31 18 30 19) (29 30 14) (28 28) (48 19 40 41 19 22 25 26 29) (40 43 20 39 40) (11 37 14 18 42) (9 20 48 60 61 48 47 24 46 34 18 36) (17 16 69 51 56 61 22 63 57) (14 56 31 53 49 69 66 16 42 73 67) (46 34 28 29 46 32) (74 29 34 64 31 34 74 47 54) (47 73 67 36 62) (68 43 21 37) (26 57 70 21 20 26 72 39 19 26 79) (55 77 48 63 24 29 56 55 76 32) (46 53 47 29 20 56) (47 73) (64 36 72) (55 36 55 36 55) (41 72 65 67 31 45 39 32 53) (33 59 38 43 9 65 37 72 72 43) (22 40 44 24 20) (34 57 39 37 10 33 35 23) (60 25 41 64 32 29 64 58 67) (35 63 45 69 32 32 56 66) (67 48 53 46 13 58 43 32 36 58) (48 40 70 76 47 41 34 55 45 73 20 67 35) (60 12 25 60 48 55 24 74) (77 29 58 20 50 35 47 46 35) (27 18 14 37 22) (47 44 39 32) (55 54 32 45) (23 44 60 38 30 32 71 32 62 68 45) (47 20 40 16 73) (25 37 34 42 42 60) (55 30 23 46 42 29 46 39 28 39 54) (18 11 46 47 55 50 41 54 46) (19 47 46 16 49 24 49) (21 12 52 49) (36 51 48 49 40 48) (49 46 47 47 15 10 48 47 47) (46 42 39 47 45) (43 20) (32 31 24 15 23 15) (16 12) (20) (20 44 45 17 29 27) (30 15 17) (10 43 46 16 43 44) (24 40 11) (19 22 21) (18 21) (34 34 26 22) (35 21 34 20) (27 32 34 22) (22) (29 22) (20) (43 22 48 31 44 32 30 19) (29 49 27 46 49 16 9 45 14 52) (44 43 31 34 47 30) (29 45 31 25) (43 35 44 39 27 35 23 13) (35 25 41 34 42 37) (23 20) (9 40 29 32 23) (18 21 26) (10) (13 13) (35 48 18 38 28 47 34 31 21 32 31) (15 31 19 34 35 26) (32 34 33) (35 29 28 34) (18 22 29 26 17) (29 12 14 36 29) (29 40 22 40 29 15 30 27) (37 38 30 36 38 27) (36 23 34) (29 33 35) (27) (34 19 28 13) (15 33 34 16 36) (13 29 32 32) (37 30 15 19 31) (38 38 17 36) (35 36 31) (37 31 52 34 57 41 35 33) (23 32 38 56) (31) (32 18 26 41 25) (44 47) (16 11 36) (26 31 32 41 42 25) (39 41 42) (34) (42 45 29 43 36 40 46 39 27 40 36) (9 40 31) (27 49 30 41 31 35 27) (29 42 37 41 28 35 51 35) (30 39 32 30 42 29 39 43) (29 31 33 40 20) (34 50 29 39 29) (38 30 42 31 34 16) (32 34 30 30) (20 49 12 41 31 29) (44 21 48) (24 15 18) (41 62 46 31) (34 48 39 18 32 54 38 49) (30 46 30 36 22 52) (34 14 21 29 40 28) (12 29 31 29) (12 31 19) (31 33 33 30 27 24 18) (11 29 32 36 23 41 35) (28 30 11 33 37) (15 32 42 34) (31) (42 30 28 18) (31 30) (46 41 42 26 27 37) (24 39 45 25) (42 41 21 44 44) (18 31 15 42 33 41) (16 32 36 17 19 32) (15 31 30 19 29) (37 29 12 30) (24 44 28 23 36 29 46) (29 40 41 43 33) (41 29 38 18 43) (32 16 33 23 34) (34 38 16 10) (57 9 56 50 43) (40 33 22 20) (37 22 39 23) (16 15) (31 45 21 27 31 48 30 35 50) (41 43 24 44) (44 40 39) (32 35 28 15) (28 14 20 23 30 34) (26) (55 31 35 21 18 36 30) (34 30) (26 20) (13) (14 14) (13) (9 14 10 10 32) (10) (10))) :loffset (quote ((70 58 0) (93 46 35 11 0) (70 23 23 0) (93 58 46 23 11 0) (82 47 23 23 12 0) (93 58 35 11 0) (58 23 0) (93 93 70 58 23 0) (93 35 23 0) (82 70 47 35 23 0) (59 35 24 0) (93 58 12 0) (93 82 82 82 47 47 12 0 0 0) (93 23 23 0) (69 58 46 23 0) (93 81 46 0) (47 47 24 24 0 0) (93 81 81 47 35 0) (93 69 58 35 23 23 0) (93 93 70 47 47 24 24 12 0) (81 58 58 46 46 34 11 0) (93 93 58 35 35 24 12 0 0) (93 93 81 81 70 70 58 35 35 12 12 0) (93 81 69 69 34 34 34 0 0) (93 93 70 0) (93 82 58 47 23 0) (81 46 35 35 23 0) (93 93 58 58 46 35 0) (58 47 0) (59 47 12 0) (70 58 47 23 0) (93 69 69 35 0) (81 81 46 12 0 0) (93 93 82 47 47 47 35 35 23 12 0) (93 81 70 35 23 0) (93 58 46 0) (58 23 11 0) (82 70 12 0) (93 93 70 58 23 0) (0 0) (0) (93 70 58 58 12 0) (81 69 69 35 0 0) (46 11 0) (58 35 12 0 0) (93 93 93 47 0) (81 34 23 0) (23 0) (58 58 34 0) (93 82 70 70 58 47 47 23 0) (46 34 0 0) (70 70 12 0) (81 58 35 12 0) (82 58 58 24 0 0) (93 93 70 58 47 47 23 0 0) (70 46 12 0) (81 34 0) (0 0) (70 35 12 0) (47 0) (0 0) (46 46 23 0) (70 0) (81 58 46 46 46 23 0) (82 82 70 47 47 12 0) (93 70 70 58 35 35 0) (94 82 70 47 0) (81 81 81 58 23 0) (81 81 58 47 35 23 23 12 12 0) (93 70 47 35 35 12 0) (58 46 35 0) (93 93 70 24 0) (93 70 23 0) (93 81 69 34 23 0 0) (70 58 58 47 47 0) (0) (81 58 12 0) (93 70 70 0) (93 47 47 35 0) (81 58 35 23 0 0) (81 69 58 35 35 0) (82 70 58 35 0) (81 58 58 34 23 23 0) (58 47 35 0 0) (58 23 0) (93 0) (82 47 12 12 0) (93 70 58 58 23 0) (93 93 59 47 47 24 0) (93 81 46 0) (58 58 35 0) (81 70 35 35 0) (81 70 0) (93 93 93 59 59 35 35 24 24 0) (58 23 23 0) (93 0 0) (70 58 0 0 0) (58 0) (23 0) (93 82 35 23 0) (24 0) (93 82 58 58 47 24 12 0) (93 81 46 46 23 23 23 0) (58 46 0 0) (82 0 0) (70 46 23 0 0) (93 93 93 81 58 35 0 0) (81 81 58 46 46 12 0) (93 81 81 69 58 23 0) (93 81 46 46 35 23 11 0 0) (93 70 47 23 23 12 0 0) (82 59 35 0 0) (81 35 0) (58 47 24 0) (70 35 23 0) (47 12 12 0) (82 82 82 70 35 0) (12 12 0) (70 58 58 24 12 0) (93 81 46 46 34 0) (70 35 12 0) (58 58 46 35 23 0) (81 58 46 34 34 34 0) (93 70 70 35 12 12 12 0) (47 47 0) (82 70 59 12 12 0) (0) (93 59 35 0) (81 11 0 0) (70 70 47 24 24 0 0) (93 69 46 0) (81 0) (93 70 46 0) (58 46 23 11 0) (93 82 58 58 47 35 35 24 24 0) (93 0) (82 35 0) (81 69 69 58 46 23 0) (82 82 47 47 35 0) (81 35 11 0) (93 70 47 47 35 0) (93 58 35 0 0 0) (35 0 0) (59 24 0) (93 58 46 12 0 0 0) (81 81 46 0) (93 82 82 82 47 47 23 0) (93 70 46 35 35 0 0) (46 35 11 0) (93 70 47 0) (93 93 69 58 23 11 0 0) (70 35 24 24 0) (81 70 58 58 35 23 0 0) (93 58 46 35 35 11 0) (93 93 93 70 0) (93 70 35 23 23 23 0 0) (93 81 46 0) (47 0) (46 46 11 0) (24 0) (93 93 70 46 46 0) (82 47 24 12 0) (93 46 35 23 0) (81 81 58 35 0 0) (81 70 58 23 23 0) (81 81 58 58 23 0) (35 35 24 0) (93 81 70 58 58 12 0) (93 58 46 46 23 23 0) (93 47 24 12 12 0) (93 93 81 58 35 0) (93 93 69 46 23 0) (70 70 58 0) (93 81 47 47 23 12 0) (93 81 0) (81 81 69 58 35 35 0) (82 47 24 12 0 0) (93 93 70 23 12 0 0) (70 0 0) (81 0) (0) (0) (0) (93 93 58 58 46 46 23 23 0) (81 23 0) (35 12 0) (93 70 35 23 0 0) (81 35 0) (81 81 81 70 70 70 58 58 46 46 46 35 35 35 23 23 12 0 0 0) (93 81 81 69 69 58 46 34 23 23 23 11 11 0 0 0) (59 47 24 24 12 0) (93 58 12 0) (93 93 47 12 12 0) (58 0) (58 0) (93 70 35 35 12 0 0) (82 82 47 12 0) (93 81 70 23 23 0) (58 23 11 0 0) (58 46 23 0) (47 0) (93 93 93 81 81 81 46 35 35 35 23 11 11 0) (35 35 24 12 0) (93 93 81 69 69 58 58 23 0) (58 47 47 35 35 24 12 0) (58 58 35 35 23 12 12 0) (46 0) (81 0) (34 11 11 0) (0) (58 11 0) (12 0) (82 82 70 59 59 47 0) (93 70 47 35 0) (93 93 59 59 24 0 0 0) (70 47 35 12 0) (93 93 70 46 23 23 23 23 0) (81 46 46 11 11 0) (93 81 0) (47 35 0 0) (93 46 23 0) (70 0) (58 23 0 0) (58 35 0) (81 0) (93 70 59 35 35 0) (81 70 35 0) (58 58 23 23 11 0) (93 81 81 34 11 0) (93 82 70 23 0) (93 58 35 35 23 0) (93 93 93 93 93 93 82 82 70 58 24 12 0) (70 58 58 23 0 0) (81 70 70 46 0) (81 81 69 69 34 23 0 0) (93 93 81 70 58 46 35 23 0) (81 70 35 35 12 0) (93 81 69 35 0) (93 93 93 93 69 58 58 46 35 35 0) (93 93 70 24 0 0) (69 69 58 46 23 23 11 0) (93 82 58 58 35 12 12 0) (93 81 58 58 35 0 0) (93 58 46 23 23 0) (82 82 70 58 35 0) (81 70 70 70 70 46 35 23 11 0 0) (94 94 70 70 47 47 35 12 12 0) (93 70 35 35 23 12 12 0) (93 93 82 70 58 47 35 35 12 0 0) (93 58 23 23 11 0) (94 82 70 47 35 35 24 0 0 0) (93 93 82 70 47 47 35 35 23 23 12 12 0) (81 70 58 58 0) (93 70 47 47 24 24 24 0) (93 81 81 70 70 58 58 47 47 35 12 12 12 0 0) (93 93 81 81 70 70 58 35 23 23 0) (93 70 70 59 59 47 35 12 0 0) (93 70 70 47 47 23 23 0 0) (81 69 46 35 35 35 11 0 0) (82 70 47 12 0) (93 81 47 47 0) (93 0 0) (93 58 12 12 0) (81 58 46 23 11 0 0 0) (94 35 0) (58 0 0) (12 0 0) (0) (81 58 47 35 23 12 12 0) (93 81 58 46 35 23 0 0) (93 58 11 0) (93 93 82 70 35 12 0 0) (93 46 35 11 11 0) (82 82 59 35 0) (93 93 70 47 0) (93 69 69 58 35 11 0 0) (82 47 24 0) (70 58 23 0) (46 34 34 0 0) (0) (93 81 81 70 70 58 58 46 46 35 11 0) (93 59 59 35 35 0) (93 82 70 70 58 35 35 23 12 0) (81 58 0) (93 70 70 47 35 12 0 0) (93 81 46 46 35 23 0 0 0) (93 47 0) (93 81 81 70 58 58 46 46 35 23 11 0 0) (93 93 82 70 70 70 58 58 47 35 35 24 24 12 0) (93 81 46 46 34 23 11 11 11 0) (93 82 70 70 58 47 47 35 35 12 12 0) (46 0) (81 23 0) (93 47 0) (93 70 35 23 23 11 0) (82 70 35 23 0) (70 35 24 0) (93 81 69 34 23 23 0) (81 70 70 35 23 0) (46 23 23 23 0) (82 82 59 24 0) (69 69 46 23 0) (93 93 58 47 35 0) (93 81 58 35 0) (93 93 81 70 70 58 58 47 35 35 12 12 0 0 0 0) (81 69 46 46 35 0) (93 82 58 47 47 47 12 12 12 12 12 0) (93 93 70 46 46 23 23 0) (70 70 47 24 0 0) (93 58 23 0) (93 12 0) (0) (93 93 81 81 46 0) (12 12 0 0) (81 69 58 35 23 0) (82 58 35 35 0 0) (69 58 35 11 11 0) (93 81 46 46 35 35 0 0) (82 47 12 0) (70 35 11 0) (59 35 0) (35 23 0) (0) (0) (35 35 24 0) (58 0 0) (69 0) (93 93 70 58 58 46 23 12 0) (81 46 34 23 0) (93 58 58 11 0) (93 93 93 81 70 58 58 35 35 35 23 0) (93 93 81 58 58 58 46 35 0) (93 93 93 70 59 47 35 24 24 12 0) (93 81 81 35 11 0) (93 70 58 58 47 24 24 12 0) (93 58 35 11 0) (93 35 35 0) (93 81 81 70 70 70 70 70 11 0 0) (93 70 70 35 12 12 12 12 0 0) (93 81 46 35 12 0) (82 0) (70 23 0) (81 58 23 23 0) (93 93 82 82 70 70 47 35 0) (93 93 58 58 47 47 35 23 12 0) (93 23 12 12 0) (93 93 70 70 58 46 35 0) (81 81 70 58 47 35 12 0 0) (93 93 70 35 35 11 11 0) (93 81 81 58 47 35 35 23 0 0) (93 93 81 58 58 46 46 23 23 23 23 11 0) (93 58 58 46 35 23 23 0) (70 47 35 35 23 23 23 12 0) (46 34 23 11 0) (58 58 12 0) (93 69 46 0) (93 70 58 46 46 35 35 23 23 23 0) (81 58 58 46 0) (93 81 69 58 0 0) (93 93 81 81 70 58 58 23 0 0 0) (82 82 82 59 47 24 12 0 0) (93 82 58 35 35 23 0) (93 12 0 0) (93 81 81 46 35 0) (93 82 47 47 35 24 24 0 0) (81 58 58 34 0) (34 0) (82 82 58 47 24 0) (70 0) (0) (47 47 35 24 12 0) (58 46 0) (93 93 58 46 23 0) (81 34 0) (82 47 0) (58 0) (69 58 0 0) (70 23 11 0) (81 69 35 0) (0) (12 0) (0) (93 69 58 58 46 23 23 0) (93 82 70 47 47 35 23 23 12 0) (82 58 47 23 12 0) (46 35 23 0) (93 82 70 35 35 12 12 0) (81 70 58 47 23 0) (46 0) (58 35 35 23 0) (81 69 0) (0) (82 0) (81 58 35 35 35 23 23 23 11 0 0) (93 82 59 59 24 0) (70 35 0) (93 82 47 0) (81 34 23 0 0) (81 58 35 35 0) (70 70 58 47 47 24 0 0) (93 70 58 35 12 0) (35 12 0) (58 23 0) (0) (34 23 11 0) (93 82 58 47 0) (93 70 47 0) (82 58 58 47 0) (58 35 12 0) (47 24 0) (93 81 58 46 46 23 23 0) (23 12 0 0) (0) (93 70 35 12 0) (93 0) (70 58 0) (81 69 69 35 23 0) (93 46 0) (0) (93 81 81 70 58 35 23 23 11 11 0) (58 35 0) (93 81 81 34 34 11 0) (93 70 47 47 35 23 0 0) (70 70 70 46 35 23 23 0) (93 70 46 0 0) (93 47 35 24 0) (93 70 23 23 0 0) (70 47 47 0) (69 46 35 35 11 0) (58 23 0) (93 47 0) (93 35 23 0) (93 70 70 46 46 35 11 0) (82 59 59 35 12 0) (93 93 69 35 0 0) (93 70 35 0) (35 12 0) (93 82 47 47 24 12 0) (93 82 59 59 47 24 0) (82 82 70 35 0) (58 35 0 0) (0) (58 58 35 0) (47 0) (93 58 46 34 23 0) (81 70 23 0) (81 58 46 23 0) (93 82 47 35 0 0) (93 58 46 35 11 0) (58 35 23 12 0) (81 35 23 0) (93 70 47 47 35 0 0) (81 81 34 11 0) (70 58 35 12 0) (93 70 23 23 0) (93 58 46 0) (82 70 24 12 0) (93 58 34 0) (93 59 24 0) (47 0) (93 81 58 58 46 34 23 11 0) (93 58 47 0) (93 81 0) (93 23 0 0) (58 46 46 34 34 0) (0) (93 81 70 47 47 47 0) (23 0) (58 0) (0) (70 0) (0) (70 58 23 12 0) (0) (0))) :lchan (quote ((1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1) (1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1) (1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1) (1 1 1 1) (1 1) (1 1) (1 1 1 1) (1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1) (1 1) (1 1 1 1 1) (1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1) (1 1) (1 1 1 1) (1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1) (1 1) (1) (1) (1) (1 1 1 1 1 1 1 1 1) (1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1) (1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1) (1 1) (1 1 1 1) (1) (1 1 1) (1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1) (1 1 1 1) (1 1) (1 1 1 1) (1 1 1) (1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1) (1 1 1) (1 1 1) (1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1) (1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1) (1 1) (1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1) (1) (1) (1 1 1 1) (1 1 1) (1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1) (1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1) (1 1 1 1 1 1) (1 1) (1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1) (1 1) (1 1 1 1) (1 1 1 1) (1 1 1 1) (1) (1 1) (1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1) (1 1 1 1 1) (1 1 1) (1) (1 1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1) (1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1) (1) (1 1 1 1 1) (1 1) (1 1 1) (1 1 1 1 1 1) (1 1 1) (1) (1 1 1 1 1 1 1 1 1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1 1 1) (1 1 1) (1 1 1 1) (1 1 1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1) (1 1 1 1) (1 1) (1 1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1 1) (1 1 1 1) (1 1 1 1) (1 1) (1 1 1 1 1 1 1 1 1) (1 1 1 1) (1 1 1) (1 1 1 1) (1 1 1 1 1 1) (1) (1 1 1 1 1 1 1) (1 1) (1 1) (1) (1 1) (1) (1 1 1 1 1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0) (0 0 0 0) (0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0) (0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0) (0) (0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0) (0 0 0 0) (0) (0 0 0) (0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0) (0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0) (0 0 0) (0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0) (0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0) (0) (0) (0 0 0 0) (0 0 0) (0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0) (0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0) (0 0) (0 0 0 0) (0 0 0 0) (0 0 0 0) (0) (0 0) (0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0) (0) (0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0) (0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0) (0 0 0 0 0) (0 0) (0 0 0) (0 0 0 0 0 0) (0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0) (0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0) (0 0) (0) (0 0) (0) (0 0 0 0 0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.19 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 259 23) (om-make-point 1033 395) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 4)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "[YT2mp3.info] - blue (320kbps).mp3.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 128 38) (om-make-point 50 72) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale show-stems winpos winsize mode grillestep notechancolor? cmnpref obj-mode zoom deltapict player outport)) (list nil (quote t) (om-make-point 10 40) (om-make-point 370 280) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 1 (om-make-point 0 0) (quote :midi-player) 0)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 4 0 nil 0) (6 0 5 0 nil 0) (8 0 7 0 nil 0))) nil 6.19))
